# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-02 at 01:07:42 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pynetsuite.models.term import Term

class TestTerm(unittest.TestCase):
    """Term unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Term:
        """Test Term
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Term`
        """
        model = Term()
        if include_optional:
            return Term(
                is_inactive = True,
                discount_percent_date_driven = 1.337,
                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                external_id = '',
                tname = '',
                discount_percent = 1.337,
                date_driven = pynetsuite.models.term_date_driven.term_dateDriven(
                    id = '', 
                    ref_name = '', ),
                due_next_month_if_within_days = 56,
                days_until_expiry = 56,
                day_of_month_net_due = 56,
                name = '',
                days_until_net_due = 56,
                longitemtype = '',
                id = '',
                preferred = True,
                day_discount_expires = 56,
                ref_name = '',
                links = [
                    pynetsuite.models.ns_link.nsLink(
                        rel = '', 
                        href = '', )
                    ]
            )
        else:
            return Term(
        )
        """

    def testTerm(self):
        """Test Term"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
