# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-01 at 22:32:31 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pynetsuite.models.invoice_item_cost_inventory_detail_inventory_assignment_collection import InvoiceItemCostInventoryDetailInventoryAssignmentCollection

class TestInvoiceItemCostInventoryDetailInventoryAssignmentCollection(unittest.TestCase):
    """InvoiceItemCostInventoryDetailInventoryAssignmentCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoiceItemCostInventoryDetailInventoryAssignmentCollection:
        """Test InvoiceItemCostInventoryDetailInventoryAssignmentCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceItemCostInventoryDetailInventoryAssignmentCollection`
        """
        model = InvoiceItemCostInventoryDetailInventoryAssignmentCollection()
        if include_optional:
            return InvoiceItemCostInventoryDetailInventoryAssignmentCollection(
                links = [
                    pynetsuite.models.ns_link.nsLink(
                        rel = '', 
                        href = '', )
                    ],
                total_results = 56,
                count = 56,
                has_more = True,
                offset = 56,
                items = [
                    pynetsuite.models.invoice_item_cost_inventory_detail_inventory_assignment_element.invoice-itemCost-inventoryDetail-inventoryAssignmentElement(
                        links = [
                            pynetsuite.models.ns_link.nsLink(
                                rel = '', 
                                href = '', )
                            ], 
                        pack_carton = '', 
                        quantity = 1.337, 
                        expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        inventory_detail = 56, 
                        receipt_inventory_number = '', 
                        internal_id = 56, 
                        quantity_available = 1.337, 
                        pick_carton = '', 
                        ref_name = '', 
                        inventory_status = pynetsuite.models.ns_resource.nsResource(
                            id = '', 
                            ref_name = '', 
                            external_id = '', 
                            links = [
                                pynetsuite.models.ns_link.nsLink(
                                    rel = '', 
                                    href = '', )
                                ], ), 
                        to_inventory_status = pynetsuite.models.ns_resource.nsResource(
                            id = '', 
                            ref_name = '', 
                            external_id = '', 
                            links = , ), 
                        bin_number = , 
                        to_bin_number = , 
                        issue_inventory_number = , )
                    ]
            )
        else:
            return InvoiceItemCostInventoryDetailInventoryAssignmentCollection(
        )
        """

    def testInvoiceItemCostInventoryDetailInventoryAssignmentCollection(self):
        """Test InvoiceItemCostInventoryDetailInventoryAssignmentCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
