# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-02 at 01:07:42 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pynetsuite.models.vendor_collection import VendorCollection

class TestVendorCollection(unittest.TestCase):
    """VendorCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VendorCollection:
        """Test VendorCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VendorCollection`
        """
        model = VendorCollection()
        if include_optional:
            return VendorCollection(
                total_results = 56,
                items = [
                    pynetsuite.models.vendor.vendor(
                        is_job_resource_vend = True, 
                        custentity_erpff_p2p_party_endpoint_id = '', 
                        custentity_bb1_cis_cisenabled = True, 
                        custentity_bb1_cis_ni_ref = '', 
                        email_transactions = True, 
                        custentity_zc_3wm_exclude_from_3wm = True, 
                        password = '', 
                        custentity_vl_team_size = 1.337, 
                        custentity_ff_sc_iban = '', 
                        custentity_zc_qty_tlrnce_percentage = 1.337, 
                        balance = 1.337, 
                        custentity_zc_amt_tlrnce_amount = 1.337, 
                        print_on_check_as = '', 
                        custentity_eff_nsp2p_lastrec_vatnumber = '', 
                        id = '', 
                        fax = '', 
                        custentity_eff_nsp2p_currency_code = '', 
                        custentity_ff_sc_ent_diff_pref_cust_id = '', 
                        unbilled_orders_primary = 1.337, 
                        custentity_erpff_p2p_party_endp_sch_id = '', 
                        custentity_vl_emergency_contact_person = '', 
                        custentity_zc_rate_tlrnce_percentage = 1.337, 
                        date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_name = '', 
                        receipt_quantity_diff = 1.337, 
                        phone = '', 
                        require_pwd_change = True, 
                        company_name = '', 
                        custentitypayeeaccountaddress = '', 
                        custentity_eff_nsp2p_lastrec_iban = '', 
                        custentity_vl_public_liability_expiry = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        custentity_erpff_p2p_party_endp_op_id = '', 
                        custentity_ff_sc_entity_ita_apy_code = '', 
                        default_address = '', 
                        opening_balance = 1.337, 
                        custentity_rss_website = '', 
                        custentity_vl_capacity_install_per_month = 1.337, 
                        custentity_vl_trading_postcode = '', 
                        custentity_bb1_cis_worksref = '', 
                        is_person = True, 
                        custentity_zc_amt_tlrnce_percentage = 1.337, 
                        password2 = '', 
                        custentity_zc_disable_ai_fld_pop = True, 
                        email = '', 
                        opening_balance_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        custentity_tax_contact_last = '', 
                        custentity_nx_labor_cost = 1.337, 
                        custentity_vl_employers_liability_expiry = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        custentity_ff_sc_bank_code = '', 
                        url = '', 
                        custentity_vl_registered_address = '', 
                        custom_form = pynetsuite.models.vendor_custom_form.vendor_customForm(
                            id = '81', 
                            ref_name = '', ), 
                        custentity_vl_site_allocation = '', 
                        auto_name = True, 
                        custentity_eff_nsp2p_lastrec_compname = '', 
                        custentitypayeeaccountname = '', 
                        custentity_ff_sc_dis_lin_rec = True, 
                        custentity_tax_contact_middle = '', 
                        custentity_eff_nsp2p_einvoice_number = '', 
                        custentity_vl_trading_address = '', 
                        custentitypayeesortcode = '', 
                        custentity_vl_profl_indemnity_expiry = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        external_id = '', 
                        custentity_erpff_p2p_basw_tax_id = '', 
                        entity_id = '', 
                        email_preference = pynetsuite.models.vendor_email_preference.vendor_emailPreference(
                            id = 'PDF', 
                            ref_name = '', ), 
                        subsidiary_edition = '', 
                        custentity_ff_sc_clickdata = '', 
                        custentity_bb1_missingrecord = True, 
                        purchase_order_amount = 1.337, 
                        is_autogenerated_representing_entity = True, 
                        receipt_quantity = 1.337, 
                        custentity_zc_rate_tlrnce_amount = 1.337, 
                        custentity_bb1_cis_hmrc_verification = '', 
                        mobile_phone = '', 
                        balance_primary = 1.337, 
                        custentity_zc_po_required = True, 
                        unbilled_orders = 1.337, 
                        custentity_eff_nsp2p_autoproc_billscreds = True, 
                        custentity_ff_sc_field_block_mapping = '', 
                        alt_phone = '', 
                        custentity_zc_qty_tlrnce_amount = 1.337, 
                        custentity_bb1_cis_utr = '', 
                        fax_transactions = True, 
                        custentity_rss_linkedin = '', 
                        custentity_vl_average_lead_time_on_goods = 56, 
                        alt_email = '', 
                        purchase_order_quantity_diff = 1.337, 
                        custentity_tax_contact_first = '', 
                        salutation = '', 
                        custentity_bb1_cis_hmrc_country = '', 
                        is_inactive = True, 
                        first_name = '', 
                        home_phone = '', 
                        legal_name = '', 
                        title = '', 
                        custentity_vl_trade_type_other = '', 
                        labor_cost = 1.337, 
                        give_access = True, 
                        default_shipping_address = '', 
                        custentity_rss_yoe = 1.337, 
                        purchase_order_quantity = 1.337, 
                        custentity_bb1_cis_crn = '', 
                        custentity_vl_pli_amount = '', 
                        custentity_eff_nsp2p_lastrec_cocnumber = '', 
                        comments = '', 
                        account_number = '', 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        middle_name = '', 
                        custentitypayeeaccountnumber = '', 
                        print_transactions = True, 
                        receipt_amount = 1.337, 
                        custentity_eff_nsp2p_procb2btran_aftersv = True, 
                        custentity_ff_sc_bank_account_number = '', 
                        custentity_erpff_p2p_basw_tax_scheme_id = '', 
                        send_email = True, 
                        credit_limit = 1.337, 
                        ref_name = '', 
                        links = [
                            pynetsuite.models.ns_link.nsLink(
                                rel = '', 
                                href = '', )
                            ], 
                        default_vendor_payment_account = pynetsuite.models.account.account(
                            is_inactive = True, 
                            is_summary = True, 
                            s_bank_name = '', 
                            opening_balance = 1.337, 
                            tran_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            external_id = '', 
                            s_bank_routing_number = '', 
                            description = '', 
                            eliminate = True, 
                            inventory = True, 
                            custrecord_ff_sc_acc_srvc_for_taxation = True, 
                            revalue = True, 
                            s_bank_company_id = '', 
                            acct_number = '', 
                            cur_doc_num = 56, 
                            s_spec_acct = pynetsuite.models.account_s_spec_acct.account_sSpecAcct(
                                id = 'CommPay', 
                                ref_name = '', ), 
                            id = '', 
                            account_search_display_name_copy = '', 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            general_rate = pynetsuite.models.account_general_rate.account_generalRate(
                                id = 'AVERAGE', 
                                ref_name = '', ), 
                            cash_flow_rate = pynetsuite.models.account_general_rate.account_generalRate(
                                id = 'AVERAGE', 
                                ref_name = '', ), 
                            acct_type = pynetsuite.models.account_acct_type.account_acctType(
                                id = 'NonPosting', 
                                ref_name = '', ), 
                            include_children = True, 
                            account_search_display_name = '', 
                            unit = '', 
                            display_name_with_hierarchy = '', 
                            reconcile_with_matching = True, 
                            full_name = '', 
                            acct_name = '', 
                            ref_name = '', 
                            links = [
                                pynetsuite.models.ns_link.nsLink(
                                    rel = '', 
                                    href = '', )
                                ], 
                            subsidiary = pynetsuite.models.ns_resource_collection.nsResourceCollection(
                                links = , 
                                total_results = 56, 
                                items = [
                                    pynetsuite.models.ns_resource.nsResource(
                                        id = '', 
                                        ref_name = '', 
                                        external_id = '', 
                                        links = , )
                                    ], 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            deferral_acct = pynetsuite.models.account.account(
                                is_inactive = True, 
                                is_summary = True, 
                                s_bank_name = '', 
                                opening_balance = 1.337, 
                                tran_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                external_id = '', 
                                s_bank_routing_number = '', 
                                description = '', 
                                eliminate = True, 
                                inventory = True, 
                                custrecord_ff_sc_acc_srvc_for_taxation = True, 
                                revalue = True, 
                                s_bank_company_id = '', 
                                acct_number = '', 
                                cur_doc_num = 56, 
                                id = '', 
                                account_search_display_name_copy = '', 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                include_children = True, 
                                account_search_display_name = '', 
                                unit = '', 
                                display_name_with_hierarchy = '', 
                                reconcile_with_matching = True, 
                                full_name = '', 
                                acct_name = '', 
                                ref_name = '', 
                                links = , 
                                location = pynetsuite.models.ns_resource.nsResource(
                                    id = '', 
                                    ref_name = '', 
                                    external_id = '', 
                                    links = , ), 
                                billable_expenses_acct = , 
                                department = , 
                                units_type = , 
                                currency = pynetsuite.models.currency.currency(
                                    is_inactive = True, 
                                    symbol = '', 
                                    is_anchor_currency = True, 
                                    include_in_fx_rate_updates = True, 
                                    last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    exchange_rate = 1.337, 
                                    external_id = '', 
                                    is_base_currency = True, 
                                    locale = pynetsuite.models.currency_locale.currency_locale(
                                        id = 'it_CH', 
                                        ref_name = '', ), 
                                    fx_rate_update_timezone = pynetsuite.models.currency_fx_rate_update_timezone.currency_fxRateUpdateTimezone(
                                        id = '1', 
                                        ref_name = '', ), 
                                    override_currency_format = True, 
                                    format_sample = '', 
                                    currency_precision = 56, 
                                    name = '', 
                                    id = '', 
                                    symbol_placement = pynetsuite.models.currency_symbol_placement.currency_symbolPlacement(
                                        id = '1', 
                                        ref_name = '', ), 
                                    display_symbol = '', 
                                    ref_name = '', 
                                    links = , ), 
                                class = , 
                                account_context_search = pynetsuite.models.account_account_context_search_collection.account-accountContextSearchCollection(
                                    links = , 
                                    total_results = 56, 
                                    count = 56, 
                                    has_more = True, 
                                    offset = 56, ), 
                                localizations = pynetsuite.models.account_localizations_collection.account-localizationsCollection(
                                    links = , 
                                    total_results = 56, 
                                    count = 56, 
                                    has_more = True, 
                                    offset = 56, ), 
                                category1099_misc = , 
                                parent = , ), 
                            location = , 
                            billable_expenses_acct = , 
                            department = , 
                            units_type = , 
                            currency = pynetsuite.models.currency.currency(
                                is_inactive = True, 
                                symbol = '', 
                                is_anchor_currency = True, 
                                include_in_fx_rate_updates = True, 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                exchange_rate = 1.337, 
                                external_id = '', 
                                is_base_currency = True, 
                                override_currency_format = True, 
                                format_sample = '', 
                                currency_precision = 56, 
                                name = '', 
                                id = '', 
                                display_symbol = '', 
                                ref_name = '', 
                                links = , ), 
                            class = , 
                            account_context_search = pynetsuite.models.account_account_context_search_collection.account-accountContextSearchCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            localizations = pynetsuite.models.account_localizations_collection.account-localizationsCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            category1099_misc = , 
                            parent = , ), 
                        custentity_zc_3wm_tlrnce_type_qty = , 
                        currency_list = pynetsuite.models.vendor_currency_list_collection.vendor-currencyListCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        custentity_zc_3wm_tlrnce_type_rate = , 
                        roles = pynetsuite.models.vendor_roles_collection.vendor-rolesCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        contact_list = pynetsuite.models.ns_resource_collection.nsResourceCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        custentity_zc_prevailing_quantity = , 
                        custentity_zc_autoprocessing_preferences = , 
                        currency = , 
                        custentity_zc_ap_payment_schedule = , 
                        opening_balance_account = , 
                        custentity_nx_location = , 
                        custentity_vl_trade_type = , 
                        subsidiary = , 
                        custentity_zc_ap_primary_beneficiary_acc = , 
                        custentity_erpff_p2p_party_endp_scheme = , 
                        rates = pynetsuite.models.vendor_rates_collection.vendor-ratesCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        payables_account = , 
                        custentity_eff_nsp2p_createdfrom_bill2pr = , 
                        custentity_zc_3wm_tlrnce_type_amt = , 
                        custentity_tax_contact = , 
                        custentity_vl_contractor_location = , 
                        custentity_bb1_cis_contractor_type = , 
                        custentity_4601_defaultwitaxcode = , 
                        custentity_vl_main_delivery_method = , 
                        expense_account = , 
                        custentity_zc_prevailing_amount = , 
                        billing_class = , 
                        custentity_erpff_p2p_basw_tax_scheme = , 
                        terms = pynetsuite.models.term.term(
                            is_inactive = True, 
                            discount_percent_date_driven = 1.337, 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            external_id = '', 
                            tname = '', 
                            discount_percent = 1.337, 
                            date_driven = pynetsuite.models.term_date_driven.term_dateDriven(
                                id = '', 
                                ref_name = '', ), 
                            due_next_month_if_within_days = 56, 
                            days_until_expiry = 56, 
                            day_of_month_net_due = 56, 
                            name = '', 
                            days_until_net_due = 56, 
                            longitemtype = '', 
                            id = '', 
                            preferred = True, 
                            day_discount_expires = 56, 
                            ref_name = '', 
                            links = , ), 
                        category = , 
                        custentity_vl_entity_source = , 
                        default_bank_account = , 
                        custentity_vl_trade_ventro = , 
                        custentity_ff_sc_validation_rules = , 
                        image = , 
                        work_calendar = , 
                        custentity_ff_sc_entity_ita_pay_term = , 
                        custentity_nx_skill = , 
                        address_book = pynetsuite.models.vendor_address_book_collection.vendor-addressBookCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        contact = , 
                        representing_subsidiary = , 
                        custentity_zc_prevailing_rate = , 
                        custentity_payment_type = , 
                        incoterm = , 
                        custentity_eff_nsp2p_defaultitem = null, 
                        custentity_ff_sc_ent_diff_pref = , 
                        custentity_vl_entity_type = , )
                    ],
                links = [
                    pynetsuite.models.ns_link.nsLink(
                        rel = '', 
                        href = '', )
                    ],
                count = 56,
                has_more = True,
                offset = 56
            )
        else:
            return VendorCollection(
        )
        """

    def testVendorCollection(self):
        """Test VendorCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
