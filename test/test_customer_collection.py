# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-01 at 22:32:31 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pynetsuite.models.customer_collection import CustomerCollection

class TestCustomerCollection(unittest.TestCase):
    """CustomerCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerCollection:
        """Test CustomerCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerCollection`
        """
        model = CustomerCollection()
        if include_optional:
            return CustomerCollection(
                total_results = 56,
                items = [
                    pynetsuite.models.customer.customer(
                        custentity_dic = '', 
                        custentity_erpff_p2p_party_endpoint_id = '', 
                        custentity_nxc_cust_signature = True, 
                        email_transactions = True, 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        last_sale_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        custentity_payment_run_details = '', 
                        third_party_country = pynetsuite.models.invoice_billing_address_country.invoice_billingAddress_country(
                            id = 'PR', 
                            ref_name = '', ), 
                        password = '', 
                        custentity_vl_task_resched_limit = 56, 
                        balance = 1.337, 
                        group_invoices = True, 
                        custentity_todeleteproject = True, 
                        print_on_check_as = '', 
                        id = '', 
                        fax = '', 
                        custentity1 = '', 
                        custentity_link_lsa = '', 
                        custentity_erpff_p2p_party_endp_sch_id = '', 
                        custentityhs_integration_embed = '', 
                        custentity_vl_emergency_contact_person = '', 
                        third_party_zip_code = '', 
                        date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        billing_transaction_form = pynetsuite.models.customer_billing_transaction_form.customer_billingTransactionForm(
                            id = '110', 
                            ref_name = '', ), 
                        overdue_balance = 1.337, 
                        alcohol_recipient_type = pynetsuite.models.customer_alcohol_recipient_type.customer_alcoholRecipientType(
                            id = 'CONSUMER', 
                            ref_name = '', ), 
                        last_name = '', 
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        phone = '', 
                        custentity_bb1_hubspot_sync = True, 
                        company_name = '', 
                        custentity_kl_fsm_mobile_test_customer = True, 
                        custentity_erpff_p2p_party_endp_op_id = '', 
                        custentity_ff_sc_entity_ita_apy_code = '', 
                        default_address = '', 
                        opening_balance = 1.337, 
                        credit_hold_override = pynetsuite.models.customer_credit_hold_override.customer_creditHoldOverride(
                            id = 'AUTO', 
                            ref_name = '', ), 
                        is_person = True, 
                        custentity_erpff_p2p_auto_send_document = True, 
                        password2 = '', 
                        email = '', 
                        opening_balance_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        custentity_tax_contact_last = '', 
                        custentity_bb1_cc_note = '', 
                        deposit_balance = 1.337, 
                        last_order_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        url = '', 
                        first_sale_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        custom_form = pynetsuite.models.customer_custom_form.customer_customForm(
                            id = '-2', 
                            ref_name = '', ), 
                        custentity_vl_site_allocation = '', 
                        auto_name = True, 
                        custentity_ico = '', 
                        aging = 1.337, 
                        ship_complete = True, 
                        custentity_tax_contact_middle = '', 
                        custentity_date_lsa = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        custentity_bb1_cc_lasttype = '', 
                        third_party_carrier = pynetsuite.models.customer_third_party_carrier.customer_thirdPartyCarrier(
                            id = 'fedex', 
                            ref_name = '', ), 
                        external_id = '', 
                        custentity_erpff_p2p_basw_tax_id = '', 
                        entity_id = '', 
                        email_preference = pynetsuite.models.vendor_email_preference.vendor_emailPreference(
                            id = 'PDF', 
                            ref_name = '', ), 
                        custentity_bb1_missingrecord = True, 
                        number_format = pynetsuite.models.customer_number_format.customer_numberFormat(
                            id = '0', 
                            ref_name = '', ), 
                        is_autogenerated_representing_entity = True, 
                        is_budget_approved = True, 
                        mobile_phone = '', 
                        custentity_cusstatementname = '', 
                        unbilled_orders = 1.337, 
                        search_stage = '', 
                        alt_phone = '', 
                        first_order_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        fax_transactions = True, 
                        resale_number = '', 
                        custentity_nxc_customer_account = '', 
                        alt_email = '', 
                        default_order_priority = 1.337, 
                        custentity_tax_contact_first = '', 
                        salutation = '', 
                        is_inactive = True, 
                        first_name = '', 
                        third_party_acct = '', 
                        custentity_bb1_cc_lastemail = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        home_phone = '', 
                        estimated_budget = 1.337, 
                        custentity_bb1_last_statement = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        title = '', 
                        default_shipping_address = '', 
                        give_access = True, 
                        negative_number_format = pynetsuite.models.customer_negative_number_format.customer_negativeNumberFormat(
                            id = '0', 
                            ref_name = '', ), 
                        billing_transaction_type = pynetsuite.models.customer_billing_transaction_type.customer_billingTransactionType(
                            id = 'CashSale', 
                            ref_name = '', ), 
                        shipping_carrier = pynetsuite.models.customer_shipping_carrier.customer_shippingCarrier(
                            id = 'ups', 
                            ref_name = '', ), 
                        aging2 = 1.337, 
                        aging3 = 1.337, 
                        aging1 = 1.337, 
                        aging4 = 1.337, 
                        comments = '', 
                        account_number = '', 
                        reminder_days = 56, 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custentity_bb1_customer_approved = True, 
                        middle_name = '', 
                        print_transactions = True, 
                        custentity_bb1_dispute_reason = '', 
                        custentity_link_name_lsa = '', 
                        custentity_bb1_credit_control_checked = True, 
                        custentity_bb1_cc_pause = True, 
                        days_overdue = 56, 
                        custentity_erpff_p2p_basw_tax_scheme_id = '', 
                        credit_limit = 1.337, 
                        send_email = True, 
                        ref_name = '', 
                        links = [
                            pynetsuite.models.ns_link.nsLink(
                                rel = '', 
                                href = '', )
                            ], 
                        contact_roles = pynetsuite.models.customer_contact_roles_collection.customer-contactRolesCollection(
                            links = [
                                pynetsuite.models.ns_link.nsLink(
                                    rel = '', 
                                    href = '', )
                                ], 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, 
                            items = [
                                pynetsuite.models.customer_contact_roles_element.customer-contactRolesElement(
                                    links = , 
                                    contact_name = '', 
                                    give_access = True, 
                                    password = '', 
                                    password_confirm = '', 
                                    email = '', 
                                    ref_name = '', 
                                    role = pynetsuite.models.ns_resource.nsResource(
                                        id = '', 
                                        ref_name = '', 
                                        external_id = '', 
                                        links = , ), 
                                    contact = pynetsuite.models.ns_resource.nsResource(
                                        id = '', 
                                        ref_name = '', 
                                        external_id = '', 
                                        links = , ), )
                                ], ), 
                        buying_reason = , 
                        contact = , 
                        custentity_tax_contact = , 
                        terms = pynetsuite.models.term.term(
                            is_inactive = True, 
                            discount_percent_date_driven = 1.337, 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            external_id = '', 
                            tname = '', 
                            discount_percent = 1.337, 
                            date_driven = pynetsuite.models.term_date_driven.term_dateDriven(
                                id = '', 
                                ref_name = '', ), 
                            due_next_month_if_within_days = 56, 
                            days_until_expiry = 56, 
                            day_of_month_net_due = 56, 
                            name = '', 
                            days_until_net_due = 56, 
                            longitemtype = '', 
                            id = '', 
                            preferred = True, 
                            day_discount_expires = 56, 
                            ref_name = '', 
                            links = , ), 
                        custentity_4601_defaultwitaxcode = , 
                        default_bank_account = pynetsuite.models.account.account(
                            is_inactive = True, 
                            is_summary = True, 
                            s_bank_name = '', 
                            opening_balance = 1.337, 
                            tran_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            external_id = '', 
                            s_bank_routing_number = '', 
                            description = '', 
                            eliminate = True, 
                            inventory = True, 
                            custrecord_ff_sc_acc_srvc_for_taxation = True, 
                            revalue = True, 
                            s_bank_company_id = '', 
                            acct_number = '', 
                            cur_doc_num = 56, 
                            s_spec_acct = pynetsuite.models.account_s_spec_acct.account_sSpecAcct(
                                id = 'CommPay', 
                                ref_name = '', ), 
                            id = '', 
                            account_search_display_name_copy = '', 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            general_rate = pynetsuite.models.account_general_rate.account_generalRate(
                                id = 'AVERAGE', 
                                ref_name = '', ), 
                            cash_flow_rate = pynetsuite.models.account_general_rate.account_generalRate(
                                id = 'AVERAGE', 
                                ref_name = '', ), 
                            acct_type = pynetsuite.models.account_acct_type.account_acctType(
                                id = 'NonPosting', 
                                ref_name = '', ), 
                            include_children = True, 
                            account_search_display_name = '', 
                            unit = '', 
                            display_name_with_hierarchy = '', 
                            reconcile_with_matching = True, 
                            full_name = '', 
                            acct_name = '', 
                            ref_name = '', 
                            links = , 
                            subsidiary = pynetsuite.models.ns_resource_collection.nsResourceCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            deferral_acct = pynetsuite.models.account.account(
                                is_inactive = True, 
                                is_summary = True, 
                                s_bank_name = '', 
                                opening_balance = 1.337, 
                                tran_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                external_id = '', 
                                s_bank_routing_number = '', 
                                description = '', 
                                eliminate = True, 
                                inventory = True, 
                                custrecord_ff_sc_acc_srvc_for_taxation = True, 
                                revalue = True, 
                                s_bank_company_id = '', 
                                acct_number = '', 
                                cur_doc_num = 56, 
                                id = '', 
                                account_search_display_name_copy = '', 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                include_children = True, 
                                account_search_display_name = '', 
                                unit = '', 
                                display_name_with_hierarchy = '', 
                                reconcile_with_matching = True, 
                                full_name = '', 
                                acct_name = '', 
                                ref_name = '', 
                                links = , 
                                location = , 
                                billable_expenses_acct = , 
                                department = , 
                                units_type = , 
                                currency = pynetsuite.models.currency.currency(
                                    is_inactive = True, 
                                    symbol = '', 
                                    is_anchor_currency = True, 
                                    include_in_fx_rate_updates = True, 
                                    last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    exchange_rate = 1.337, 
                                    external_id = '', 
                                    is_base_currency = True, 
                                    locale = pynetsuite.models.currency_locale.currency_locale(
                                        id = 'it_CH', 
                                        ref_name = '', ), 
                                    fx_rate_update_timezone = pynetsuite.models.currency_fx_rate_update_timezone.currency_fxRateUpdateTimezone(
                                        id = '1', 
                                        ref_name = '', ), 
                                    override_currency_format = True, 
                                    format_sample = '', 
                                    currency_precision = 56, 
                                    name = '', 
                                    id = '', 
                                    symbol_placement = pynetsuite.models.currency_symbol_placement.currency_symbolPlacement(
                                        id = '1', 
                                        ref_name = '', ), 
                                    display_symbol = '', 
                                    ref_name = '', 
                                    links = , ), 
                                class = , 
                                account_context_search = pynetsuite.models.account_account_context_search_collection.account-accountContextSearchCollection(
                                    links = , 
                                    total_results = 56, 
                                    count = 56, 
                                    has_more = True, 
                                    offset = 56, ), 
                                localizations = pynetsuite.models.account_localizations_collection.account-localizationsCollection(
                                    links = , 
                                    total_results = 56, 
                                    count = 56, 
                                    has_more = True, 
                                    offset = 56, ), 
                                category1099_misc = , 
                                parent = , ), 
                            location = , 
                            billable_expenses_acct = , 
                            department = , 
                            units_type = , 
                            currency = pynetsuite.models.currency.currency(
                                is_inactive = True, 
                                symbol = '', 
                                is_anchor_currency = True, 
                                include_in_fx_rate_updates = True, 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                exchange_rate = 1.337, 
                                external_id = '', 
                                is_base_currency = True, 
                                override_currency_format = True, 
                                format_sample = '', 
                                currency_precision = 56, 
                                name = '', 
                                id = '', 
                                display_symbol = '', 
                                ref_name = '', 
                                links = , ), 
                            class = , 
                            account_context_search = pynetsuite.models.account_account_context_search_collection.account-accountContextSearchCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            localizations = pynetsuite.models.account_localizations_collection.account-localizationsCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            category1099_misc = , 
                            parent = , ), 
                        partner = , 
                        custentity_ph4185_bstyle = , 
                        receivables_account = , 
                        sales_readiness = , 
                        group_pricing = pynetsuite.models.customer_group_pricing_collection.customer-groupPricingCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        category = , 
                        source_web_site = , 
                        pref_cc_processor = , 
                        sales_rep = , 
                        shipping_item = , 
                        billing_schedule = , 
                        assigned_web_site = , 
                        opening_balance_account = , 
                        lead_source = , 
                        subsidiary = , 
                        custentity_ff_sc_entity_ita_pay_term = , 
                        territory = , 
                        item_pricing = pynetsuite.models.customer_item_pricing_collection.customer-itemPricingCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        custentity_ff_sc_bank_details = , 
                        buying_time_frame = , 
                        entity_status = , 
                        custentity_erpff_p2p_party_endp_scheme = , 
                        custentity_bb1_market = , 
                        currency_list = pynetsuite.models.customer_currency_list_collection.customer-currencyListCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        billing_rate_card = , 
                        custentity_ff_sc_bank_details_sec = , 
                        dr_account = , 
                        top_level_parent = pynetsuite.models.customer.customer(
                            custentity_dic = '', 
                            custentity_erpff_p2p_party_endpoint_id = '', 
                            custentity_nxc_cust_signature = True, 
                            email_transactions = True, 
                            start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            last_sale_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            custentity_payment_run_details = '', 
                            password = '', 
                            custentity_vl_task_resched_limit = 56, 
                            balance = 1.337, 
                            group_invoices = True, 
                            custentity_todeleteproject = True, 
                            print_on_check_as = '', 
                            id = '', 
                            fax = '', 
                            custentity1 = '', 
                            custentity_link_lsa = '', 
                            custentity_erpff_p2p_party_endp_sch_id = '', 
                            custentityhs_integration_embed = '', 
                            custentity_vl_emergency_contact_person = '', 
                            third_party_zip_code = '', 
                            date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            overdue_balance = 1.337, 
                            last_name = '', 
                            end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            phone = '', 
                            custentity_bb1_hubspot_sync = True, 
                            company_name = '', 
                            custentity_kl_fsm_mobile_test_customer = True, 
                            custentity_erpff_p2p_party_endp_op_id = '', 
                            custentity_ff_sc_entity_ita_apy_code = '', 
                            default_address = '', 
                            opening_balance = 1.337, 
                            is_person = True, 
                            custentity_erpff_p2p_auto_send_document = True, 
                            password2 = '', 
                            email = '', 
                            opening_balance_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            custentity_tax_contact_last = '', 
                            custentity_bb1_cc_note = '', 
                            deposit_balance = 1.337, 
                            last_order_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            url = '', 
                            first_sale_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            custentity_vl_site_allocation = '', 
                            auto_name = True, 
                            custentity_ico = '', 
                            aging = 1.337, 
                            ship_complete = True, 
                            custentity_tax_contact_middle = '', 
                            custentity_date_lsa = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            custentity_bb1_cc_lasttype = '', 
                            external_id = '', 
                            custentity_erpff_p2p_basw_tax_id = '', 
                            entity_id = '', 
                            custentity_bb1_missingrecord = True, 
                            is_autogenerated_representing_entity = True, 
                            is_budget_approved = True, 
                            mobile_phone = '', 
                            custentity_cusstatementname = '', 
                            unbilled_orders = 1.337, 
                            search_stage = '', 
                            alt_phone = '', 
                            first_order_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            fax_transactions = True, 
                            resale_number = '', 
                            custentity_nxc_customer_account = '', 
                            alt_email = '', 
                            default_order_priority = 1.337, 
                            custentity_tax_contact_first = '', 
                            salutation = '', 
                            is_inactive = True, 
                            first_name = '', 
                            third_party_acct = '', 
                            custentity_bb1_cc_lastemail = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            home_phone = '', 
                            estimated_budget = 1.337, 
                            custentity_bb1_last_statement = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            title = '', 
                            default_shipping_address = '', 
                            give_access = True, 
                            aging2 = 1.337, 
                            aging3 = 1.337, 
                            aging1 = 1.337, 
                            aging4 = 1.337, 
                            comments = '', 
                            account_number = '', 
                            reminder_days = 56, 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            custentity_bb1_customer_approved = True, 
                            middle_name = '', 
                            print_transactions = True, 
                            custentity_bb1_dispute_reason = '', 
                            custentity_link_name_lsa = '', 
                            custentity_bb1_credit_control_checked = True, 
                            custentity_bb1_cc_pause = True, 
                            days_overdue = 56, 
                            custentity_erpff_p2p_basw_tax_scheme_id = '', 
                            credit_limit = 1.337, 
                            send_email = True, 
                            ref_name = '', 
                            links = , 
                            representing_subsidiary = , 
                            contact_list = pynetsuite.models.ns_resource_collection.nsResourceCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            custentity_erpff_p2p_basw_tax_scheme = , 
                            price_level = , 
                            image = , 
                            address_book = pynetsuite.models.customer_address_book_collection.customer-addressBookCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), ), 
                        representing_subsidiary = , 
                        contact_list = , 
                        currency = , 
                        parent = , 
                        custentity_erpff_p2p_basw_tax_scheme = , 
                        price_level = , 
                        image = , 
                        address_book = pynetsuite.models.customer_address_book_collection.customer-addressBookCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), )
                    ],
                links = [
                    pynetsuite.models.ns_link.nsLink(
                        rel = '', 
                        href = '', )
                    ],
                count = 56,
                has_more = True,
                offset = 56
            )
        else:
            return CustomerCollection(
        )
        """

    def testCustomerCollection(self):
        """Test CustomerCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
