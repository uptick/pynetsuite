# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-02 at 01:07:42 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pynetsuite.models.account_collection import AccountCollection

class TestAccountCollection(unittest.TestCase):
    """AccountCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountCollection:
        """Test AccountCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountCollection`
        """
        model = AccountCollection()
        if include_optional:
            return AccountCollection(
                total_results = 56,
                items = [
                    pynetsuite.models.account.account(
                        is_inactive = True, 
                        is_summary = True, 
                        s_bank_name = '', 
                        opening_balance = 1.337, 
                        tran_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        external_id = '', 
                        s_bank_routing_number = '', 
                        description = '', 
                        eliminate = True, 
                        inventory = True, 
                        custrecord_ff_sc_acc_srvc_for_taxation = True, 
                        revalue = True, 
                        s_bank_company_id = '', 
                        acct_number = '', 
                        cur_doc_num = 56, 
                        s_spec_acct = pynetsuite.models.account_s_spec_acct.account_sSpecAcct(
                            id = 'CommPay', 
                            ref_name = '', ), 
                        id = '', 
                        account_search_display_name_copy = '', 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        general_rate = pynetsuite.models.account_general_rate.account_generalRate(
                            id = 'AVERAGE', 
                            ref_name = '', ), 
                        cash_flow_rate = pynetsuite.models.account_general_rate.account_generalRate(
                            id = 'AVERAGE', 
                            ref_name = '', ), 
                        acct_type = pynetsuite.models.account_acct_type.account_acctType(
                            id = 'NonPosting', 
                            ref_name = '', ), 
                        include_children = True, 
                        account_search_display_name = '', 
                        unit = '', 
                        display_name_with_hierarchy = '', 
                        reconcile_with_matching = True, 
                        full_name = '', 
                        acct_name = '', 
                        ref_name = '', 
                        links = [
                            pynetsuite.models.ns_link.nsLink(
                                rel = '', 
                                href = '', )
                            ], 
                        subsidiary = pynetsuite.models.ns_resource_collection.nsResourceCollection(
                            links = [
                                pynetsuite.models.ns_link.nsLink(
                                    rel = '', 
                                    href = '', )
                                ], 
                            total_results = 56, 
                            items = [
                                pynetsuite.models.ns_resource.nsResource(
                                    id = '', 
                                    ref_name = '', 
                                    external_id = '', 
                                    links = , )
                                ], 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        deferral_acct = pynetsuite.models.account.account(
                            is_inactive = True, 
                            is_summary = True, 
                            s_bank_name = '', 
                            opening_balance = 1.337, 
                            tran_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            external_id = '', 
                            s_bank_routing_number = '', 
                            description = '', 
                            eliminate = True, 
                            inventory = True, 
                            custrecord_ff_sc_acc_srvc_for_taxation = True, 
                            revalue = True, 
                            s_bank_company_id = '', 
                            acct_number = '', 
                            cur_doc_num = 56, 
                            id = '', 
                            account_search_display_name_copy = '', 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            include_children = True, 
                            account_search_display_name = '', 
                            unit = '', 
                            display_name_with_hierarchy = '', 
                            reconcile_with_matching = True, 
                            full_name = '', 
                            acct_name = '', 
                            ref_name = '', 
                            links = , 
                            location = pynetsuite.models.ns_resource.nsResource(
                                id = '', 
                                ref_name = '', 
                                external_id = '', 
                                links = , ), 
                            billable_expenses_acct = , 
                            department = , 
                            units_type = , 
                            currency = pynetsuite.models.currency.currency(
                                is_inactive = True, 
                                symbol = '', 
                                is_anchor_currency = True, 
                                include_in_fx_rate_updates = True, 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                exchange_rate = 1.337, 
                                external_id = '', 
                                is_base_currency = True, 
                                locale = pynetsuite.models.currency_locale.currency_locale(
                                    id = 'it_CH', 
                                    ref_name = '', ), 
                                fx_rate_update_timezone = pynetsuite.models.currency_fx_rate_update_timezone.currency_fxRateUpdateTimezone(
                                    id = '1', 
                                    ref_name = '', ), 
                                override_currency_format = True, 
                                format_sample = '', 
                                currency_precision = 56, 
                                name = '', 
                                id = '', 
                                symbol_placement = pynetsuite.models.currency_symbol_placement.currency_symbolPlacement(
                                    id = '1', 
                                    ref_name = '', ), 
                                display_symbol = '', 
                                ref_name = '', 
                                links = , ), 
                            class = , 
                            account_context_search = pynetsuite.models.account_account_context_search_collection.account-accountContextSearchCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            localizations = pynetsuite.models.account_localizations_collection.account-localizationsCollection(
                                links = , 
                                total_results = 56, 
                                count = 56, 
                                has_more = True, 
                                offset = 56, ), 
                            category1099_misc = , 
                            parent = , ), 
                        location = , 
                        billable_expenses_acct = , 
                        department = , 
                        units_type = , 
                        currency = pynetsuite.models.currency.currency(
                            is_inactive = True, 
                            symbol = '', 
                            is_anchor_currency = True, 
                            include_in_fx_rate_updates = True, 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            exchange_rate = 1.337, 
                            external_id = '', 
                            is_base_currency = True, 
                            override_currency_format = True, 
                            format_sample = '', 
                            currency_precision = 56, 
                            name = '', 
                            id = '', 
                            display_symbol = '', 
                            ref_name = '', 
                            links = , ), 
                        class = , 
                        account_context_search = pynetsuite.models.account_account_context_search_collection.account-accountContextSearchCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        localizations = pynetsuite.models.account_localizations_collection.account-localizationsCollection(
                            links = , 
                            total_results = 56, 
                            count = 56, 
                            has_more = True, 
                            offset = 56, ), 
                        category1099_misc = , 
                        parent = , )
                    ],
                links = [
                    pynetsuite.models.ns_link.nsLink(
                        rel = '', 
                        href = '', )
                    ],
                count = 56,
                has_more = True,
                offset = 56
            )
        else:
            return AccountCollection(
        )
        """

    def testAccountCollection(self):
        """Test AccountCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
