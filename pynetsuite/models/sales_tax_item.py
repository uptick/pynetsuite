# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-02 at 01:07:42 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from pynetsuite.models.account import Account
from pynetsuite.models.ns_link import NsLink
from pynetsuite.models.ns_resource import NsResource
from pynetsuite.models.sales_tax_item_custom_form import SalesTaxItemCustomForm
from pynetsuite.models.tax_type import TaxType
from typing import Optional, Set
from typing_extensions import Self

class SalesTaxItem(BaseModel):
    """
    SalesTaxItem
    """ # noqa: E501
    is_inactive: Optional[StrictBool] = Field(default=None, description="Check this box to inactivate this record. Inactive records do not show on transactions and records for selection in lists.", alias="isInactive")
    custrecord_4110_no_tax_invoice: Optional[StrictBool] = None
    custrecord_4110_non_taxable: Optional[StrictBool] = None
    custrecord_for_digital_services: Optional[StrictBool] = None
    custrecord_4110_reduced_rate: Optional[StrictBool] = None
    external_id: Optional[StrictStr] = Field(default=None, alias="externalId")
    custrecord_4110_partial_credit: Optional[StrictBool] = None
    description: Optional[StrictStr] = Field(default=None, description="Enter a description for this record.")
    custrecord_4110_outside_customs: Optional[StrictBool] = None
    custrecord_4110_other_tax_evidence: Optional[StrictBool] = None
    custrecord_4110_capital_goods: Optional[StrictBool] = None
    custrecord_4110_non_deductible: Optional[StrictBool] = None
    custrecord_4110_no_tax_credit: Optional[StrictBool] = None
    custrecord_4110_suspended: Optional[StrictBool] = None
    custrecord_4110_reverse_charge_alt: Optional[StrictBool] = None
    custrecord_4110_duty: Optional[StrictBool] = None
    custrecord_4110_government: Optional[StrictBool] = None
    id: Optional[StrictStr] = None
    custrecord_4110_non_recoverable: Optional[StrictBool] = None
    custrecord_4110_import: Optional[StrictBool] = None
    custrecord_4110_paid: Optional[StrictBool] = None
    custrecord_4110_triplicate: Optional[StrictBool] = None
    custrecord_4110_electronic: Optional[StrictBool] = None
    custrecord_4110_purchaser_issued: Optional[StrictBool] = None
    custrecord_4110_surcharge: Optional[StrictBool] = None
    custrecord_4110_category: Optional[StrictStr] = None
    custrecord_4110_non_operation: Optional[StrictBool] = None
    custrecord_deemed_supply: Optional[StrictBool] = None
    custrecord_4110_super_reduced: Optional[StrictBool] = None
    custrecord_gcc_state: Optional[StrictBool] = None
    custrecord_is_direct_cost_service: Optional[StrictBool] = None
    item_type: Optional[StrictStr] = Field(default=None, alias="itemType")
    custrecord_4110_duplicate: Optional[StrictBool] = None
    custom_form: Optional[SalesTaxItemCustomForm] = Field(default=None, alias="customForm")
    custrecord_4110_special_territory: Optional[StrictBool] = None
    custrecord_4110_cash_register: Optional[StrictBool] = None
    custrecord_4110_non_resident: Optional[StrictBool] = None
    custrecord_4110_unknown_tax_credit: Optional[StrictBool] = None
    ref_name: Optional[StrictStr] = Field(default=None, alias="refName")
    rate: Optional[Union[StrictFloat, StrictInt]] = None
    links: Optional[List[NsLink]] = None
    custrecord_4110_nondeductible_parent: Optional[SalesTaxItem] = None
    tax_type: Optional[TaxType] = Field(default=None, alias="taxType")
    custrecord_deferred_on: Optional[NsResource] = None
    custrecord_4110_nondeductible_account: Optional[Account] = None
    custrecord_tax_exemption_reason: Optional[NsResource] = None
    custrecord_4110_parent_alt: Optional[SalesTaxItem] = None
    __properties: ClassVar[List[str]] = ["isInactive", "custrecord_4110_no_tax_invoice", "custrecord_4110_non_taxable", "custrecord_for_digital_services", "custrecord_4110_reduced_rate", "externalId", "custrecord_4110_partial_credit", "description", "custrecord_4110_outside_customs", "custrecord_4110_other_tax_evidence", "custrecord_4110_capital_goods", "custrecord_4110_non_deductible", "custrecord_4110_no_tax_credit", "custrecord_4110_suspended", "custrecord_4110_reverse_charge_alt", "custrecord_4110_duty", "custrecord_4110_government", "id", "custrecord_4110_non_recoverable", "custrecord_4110_import", "custrecord_4110_paid", "custrecord_4110_triplicate", "custrecord_4110_electronic", "custrecord_4110_purchaser_issued", "custrecord_4110_surcharge", "custrecord_4110_category", "custrecord_4110_non_operation", "custrecord_deemed_supply", "custrecord_4110_super_reduced", "custrecord_gcc_state", "custrecord_is_direct_cost_service", "itemType", "custrecord_4110_duplicate", "customForm", "custrecord_4110_special_territory", "custrecord_4110_cash_register", "custrecord_4110_non_resident", "custrecord_4110_unknown_tax_credit", "refName", "rate", "links", "custrecord_4110_nondeductible_parent", "taxType", "custrecord_deferred_on", "custrecord_4110_nondeductible_account", "custrecord_tax_exemption_reason", "custrecord_4110_parent_alt"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of SalesTaxItem from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        """
        excluded_fields: Set[str] = set([
            "links",
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of custom_form
        if self.custom_form:
            _dict['customForm'] = self.custom_form.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in links (list)
        _items = []
        if self.links:
            for _item_links in self.links:
                if _item_links:
                    _items.append(_item_links.to_dict())
            _dict['links'] = _items
        # override the default output from pydantic by calling `to_dict()` of custrecord_4110_nondeductible_parent
        if self.custrecord_4110_nondeductible_parent:
            _dict['custrecord_4110_nondeductible_parent'] = self.custrecord_4110_nondeductible_parent.to_dict()
        # override the default output from pydantic by calling `to_dict()` of tax_type
        if self.tax_type:
            _dict['taxType'] = self.tax_type.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custrecord_deferred_on
        if self.custrecord_deferred_on:
            _dict['custrecord_deferred_on'] = self.custrecord_deferred_on.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custrecord_4110_nondeductible_account
        if self.custrecord_4110_nondeductible_account:
            _dict['custrecord_4110_nondeductible_account'] = self.custrecord_4110_nondeductible_account.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custrecord_tax_exemption_reason
        if self.custrecord_tax_exemption_reason:
            _dict['custrecord_tax_exemption_reason'] = self.custrecord_tax_exemption_reason.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custrecord_4110_parent_alt
        if self.custrecord_4110_parent_alt:
            _dict['custrecord_4110_parent_alt'] = self.custrecord_4110_parent_alt.to_dict()
        # set to None if external_id (nullable) is None
        # and model_fields_set contains the field
        if self.external_id is None and "external_id" in self.model_fields_set:
            _dict['externalId'] = None

        # set to None if description (nullable) is None
        # and model_fields_set contains the field
        if self.description is None and "description" in self.model_fields_set:
            _dict['description'] = None

        # set to None if id (nullable) is None
        # and model_fields_set contains the field
        if self.id is None and "id" in self.model_fields_set:
            _dict['id'] = None

        # set to None if custrecord_4110_category (nullable) is None
        # and model_fields_set contains the field
        if self.custrecord_4110_category is None and "custrecord_4110_category" in self.model_fields_set:
            _dict['custrecord_4110_category'] = None

        # set to None if item_type (nullable) is None
        # and model_fields_set contains the field
        if self.item_type is None and "item_type" in self.model_fields_set:
            _dict['itemType'] = None

        # set to None if rate (nullable) is None
        # and model_fields_set contains the field
        if self.rate is None and "rate" in self.model_fields_set:
            _dict['rate'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of SalesTaxItem from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "isInactive": obj.get("isInactive"),
            "custrecord_4110_no_tax_invoice": obj.get("custrecord_4110_no_tax_invoice"),
            "custrecord_4110_non_taxable": obj.get("custrecord_4110_non_taxable"),
            "custrecord_for_digital_services": obj.get("custrecord_for_digital_services"),
            "custrecord_4110_reduced_rate": obj.get("custrecord_4110_reduced_rate"),
            "externalId": obj.get("externalId"),
            "custrecord_4110_partial_credit": obj.get("custrecord_4110_partial_credit"),
            "description": obj.get("description"),
            "custrecord_4110_outside_customs": obj.get("custrecord_4110_outside_customs"),
            "custrecord_4110_other_tax_evidence": obj.get("custrecord_4110_other_tax_evidence"),
            "custrecord_4110_capital_goods": obj.get("custrecord_4110_capital_goods"),
            "custrecord_4110_non_deductible": obj.get("custrecord_4110_non_deductible"),
            "custrecord_4110_no_tax_credit": obj.get("custrecord_4110_no_tax_credit"),
            "custrecord_4110_suspended": obj.get("custrecord_4110_suspended"),
            "custrecord_4110_reverse_charge_alt": obj.get("custrecord_4110_reverse_charge_alt"),
            "custrecord_4110_duty": obj.get("custrecord_4110_duty"),
            "custrecord_4110_government": obj.get("custrecord_4110_government"),
            "id": obj.get("id"),
            "custrecord_4110_non_recoverable": obj.get("custrecord_4110_non_recoverable"),
            "custrecord_4110_import": obj.get("custrecord_4110_import"),
            "custrecord_4110_paid": obj.get("custrecord_4110_paid"),
            "custrecord_4110_triplicate": obj.get("custrecord_4110_triplicate"),
            "custrecord_4110_electronic": obj.get("custrecord_4110_electronic"),
            "custrecord_4110_purchaser_issued": obj.get("custrecord_4110_purchaser_issued"),
            "custrecord_4110_surcharge": obj.get("custrecord_4110_surcharge"),
            "custrecord_4110_category": obj.get("custrecord_4110_category"),
            "custrecord_4110_non_operation": obj.get("custrecord_4110_non_operation"),
            "custrecord_deemed_supply": obj.get("custrecord_deemed_supply"),
            "custrecord_4110_super_reduced": obj.get("custrecord_4110_super_reduced"),
            "custrecord_gcc_state": obj.get("custrecord_gcc_state"),
            "custrecord_is_direct_cost_service": obj.get("custrecord_is_direct_cost_service"),
            "itemType": obj.get("itemType"),
            "custrecord_4110_duplicate": obj.get("custrecord_4110_duplicate"),
            "customForm": SalesTaxItemCustomForm.from_dict(obj["customForm"]) if obj.get("customForm") is not None else None,
            "custrecord_4110_special_territory": obj.get("custrecord_4110_special_territory"),
            "custrecord_4110_cash_register": obj.get("custrecord_4110_cash_register"),
            "custrecord_4110_non_resident": obj.get("custrecord_4110_non_resident"),
            "custrecord_4110_unknown_tax_credit": obj.get("custrecord_4110_unknown_tax_credit"),
            "refName": obj.get("refName"),
            "rate": obj.get("rate"),
            "links": [NsLink.from_dict(_item) for _item in obj["links"]] if obj.get("links") is not None else None,
            "custrecord_4110_nondeductible_parent": SalesTaxItem.from_dict(obj["custrecord_4110_nondeductible_parent"]) if obj.get("custrecord_4110_nondeductible_parent") is not None else None,
            "taxType": TaxType.from_dict(obj["taxType"]) if obj.get("taxType") is not None else None,
            "custrecord_deferred_on": NsResource.from_dict(obj["custrecord_deferred_on"]) if obj.get("custrecord_deferred_on") is not None else None,
            "custrecord_4110_nondeductible_account": Account.from_dict(obj["custrecord_4110_nondeductible_account"]) if obj.get("custrecord_4110_nondeductible_account") is not None else None,
            "custrecord_tax_exemption_reason": NsResource.from_dict(obj["custrecord_tax_exemption_reason"]) if obj.get("custrecord_tax_exemption_reason") is not None else None,
            "custrecord_4110_parent_alt": SalesTaxItem.from_dict(obj["custrecord_4110_parent_alt"]) if obj.get("custrecord_4110_parent_alt") is not None else None
        })
        return _obj

# TODO: Rewrite to not use raise_errors
SalesTaxItem.model_rebuild(raise_errors=False)

