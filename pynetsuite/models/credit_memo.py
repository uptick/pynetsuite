# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-01 at 22:32:31 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date, datetime
from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from pynetsuite.models.account import Account
from pynetsuite.models.credit_memo_accounting_book_detail_collection import CreditMemoAccountingBookDetailCollection
from pynetsuite.models.credit_memo_apply_collection import CreditMemoApplyCollection
from pynetsuite.models.credit_memo_billing_address import CreditMemoBillingAddress
from pynetsuite.models.credit_memo_custom_form import CreditMemoCustomForm
from pynetsuite.models.credit_memo_item_collection import CreditMemoItemCollection
from pynetsuite.models.credit_memo_shipping_address import CreditMemoShippingAddress
from pynetsuite.models.credit_memo_source import CreditMemoSource
from pynetsuite.models.credit_memo_status import CreditMemoStatus
from pynetsuite.models.credit_memo_which_charges_to_add import CreditMemoWhichChargesToAdd
from pynetsuite.models.currency import Currency
from pynetsuite.models.customer import Customer
from pynetsuite.models.invoice_billing_address_country import InvoiceBillingAddressCountry
from pynetsuite.models.ns_link import NsLink
from pynetsuite.models.ns_resource import NsResource
from pynetsuite.models.ns_resource_collection import NsResourceCollection
from pynetsuite.models.term import Term
from pynetsuite.models.vendor import Vendor
from pynetsuite.models.vendor_bill_interco_status import VendorBillIntercoStatus
from pynetsuite.models.vendor_bill_item_element_customer import VendorBillItemElementCustomer
from typing import Optional, Set
from typing_extensions import Self

class CreditMemo(BaseModel):
    """
    CreditMemo
    """ # noqa: E501
    custbody_bb1_vl_rejection_reason: Optional[StrictStr] = None
    custbody_terms_dry_riser_maintenance: Optional[StrictBool] = None
    custbody_bb1_sc_nodates: Optional[StrictBool] = None
    start_date: Optional[date] = Field(default=None, alias="startDate")
    custbody_terms_lighting_maintenance: Optional[StrictBool] = None
    custbody_bb1_quote_released: Optional[StrictBool] = None
    custbody_terms_active_payment_install: Optional[StrictBool] = None
    custbody_terms_maintenance_assumptions: Optional[StrictBool] = None
    custbody_ph4014_wtax_applied: Optional[StrictBool] = None
    custbody_bb1_open_cr_value: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_terms_provisional_costs: Optional[StrictBool] = None
    custbody_4601_total_amt: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_terms_payment_for_works: Optional[StrictBool] = None
    subtotal: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="This field shows the total of the items on this credit memo. This is the total before any discounts, shipping cost, handling cost or tax is added to the order.")
    bill_addr1: Optional[StrictStr] = Field(default=None, alias="billAddr1")
    total_cost_estimate: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Estimated Cost: Estimated cost of the specific number of items; estimated rate x quantity = estimated cost.", alias="totalCostEstimate")
    amount_paid: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="amountPaid")
    bill_addr2: Optional[StrictStr] = Field(default=None, alias="billAddr2")
    bill_addr3: Optional[StrictStr] = Field(default=None, alias="billAddr3")
    sales_return: Optional[StrictStr] = Field(default=None, alias="salesReturn")
    custbody_ph4014_wtax_wamt: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_terms_compartment_install: Optional[StrictBool] = None
    custbody_link_lsa: Optional[StrictStr] = None
    as_of_date: Optional[date] = Field(default=None, description="Type an as of date for this customer credit.", alias="asOfDate")
    created_date: Optional[datetime] = Field(default=None, alias="createdDate")
    custbody_terms_painting_and_decorating: Optional[StrictBool] = None
    custbody_nx_customer_signature: Optional[StrictStr] = None
    custbody_ph4014_wtax_code: Optional[StrictStr] = None
    custbodybillreferencenumber: Optional[StrictStr] = None
    custbody_terms_payment_healthchecks: Optional[StrictBool] = None
    custbody_bb1_hubspot_record_id: Optional[StrictStr] = None
    custbody_adjustment_journal: Optional[StrictBool] = None
    custbody_vl_scheduled_auto_approval: Optional[StrictBool] = None
    custbody_client_project_manager_email: Optional[StrictStr] = None
    custbody_terms_extinguish_maintenance: Optional[StrictBool] = None
    email: Optional[StrictStr] = None
    custbody_link_name_lsa: Optional[StrictStr] = None
    can_have_stackable: Optional[StrictBool] = Field(default=None, alias="canHaveStackable")
    custbody_bb1_vl_action_reject_field: Optional[StrictStr] = None
    custbody_zc_ap_gl_acct_balance: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_country_of_origin: Optional[StrictStr] = None
    custbody_terms_fd_hc_assumptions: Optional[StrictBool] = None
    custbody_unique_asset_code: Optional[StrictStr] = None
    custbody_vl_variation_labour_budget: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_zc_3wm_translations: Optional[StrictStr] = None
    custbody_vl_variation_prelim_budget: Optional[Union[StrictFloat, StrictInt]] = None
    prev_date: Optional[date] = Field(default=None, alias="prevDate")
    custbody_itr_nexus: Optional[StrictStr] = None
    sales_effective_date: Optional[date] = Field(default=None, description="You can change the sales effective date for this transaction. The sales effective date determines which commission plan and historical sales team this transaction applies to. If this credit memo is created from a return authorization, the sales effective date from the return shown in the Created From field is set by default for this credit memo.", alias="salesEffectiveDate")
    custom_form: Optional[CreditMemoCustomForm] = Field(default=None, alias="customForm")
    custbody_terms_damper_maintenance: Optional[StrictBool] = None
    custbody_report_timestamp: Optional[StrictStr] = None
    custbody_bb1_cc_note: Optional[StrictStr] = None
    custbody_msl_estimated_weeks: Optional[StrictInt] = None
    custbody_vl_req_contact_name: Optional[StrictStr] = None
    prev_rep: Optional[StrictInt] = Field(default=None, alias="prevRep")
    custbody_terms_sprinkler_maintenance: Optional[StrictBool] = None
    custbody_ff_sc_endpoint_scheme_id: Optional[StrictStr] = None
    ship_address: Optional[StrictStr] = Field(default=None, alias="shipAddress")
    custbody_ph4014_wtax_bamt: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_erpff_p2p_auto_send_document: Optional[StrictBool] = None
    external_id: Optional[StrictStr] = Field(default=None, alias="externalId")
    source: Optional[CreditMemoSource] = None
    custbody_wtax_base_url: Optional[StrictStr] = None
    custbody_ff_sc_endpoint_op_id: Optional[StrictStr] = None
    to_be_printed: Optional[StrictBool] = Field(default=None, description="Check this box if you wish to save this in a queue of credit memos to print. Otherwise, you can click Print below to submit and print this credit memo at once.", alias="toBePrinted")
    custbody_vl_variation_material_budget: Optional[Union[StrictFloat, StrictInt]] = None
    bill_phone: Optional[StrictStr] = Field(default=None, alias="billPhone")
    custbodyhs_integration_embed: Optional[StrictStr] = None
    bill_attention: Optional[StrictStr] = Field(default=None, alias="billAttention")
    custbody_terms_contingency: Optional[StrictBool] = None
    custbodycus_ven_sales_order_department: Optional[StrictStr] = None
    custbody_test_terms_pdf: Optional[StrictBool] = None
    to_be_emailed: Optional[StrictBool] = Field(default=None, description="Check this box if you want to e-mail this credit memo. Then enter the e-mail address in the space to the right of the check box. If you don&apos;t check this box, the credit memo won&apos;t be e-mailed. You can enter multiple e-mail addresses separated by a semicolon with no spaces.", alias="toBeEmailed")
    custbody_msl_commission_generated: Optional[StrictBool] = None
    custbody_bb1_link_to_sharepoint: Optional[StrictStr] = None
    custbody_zc_ap_main_config_data: Optional[StrictStr] = None
    discount_date: Optional[date] = Field(default=None, alias="discountDate")
    custbody_vl_req_date_required: Optional[date] = None
    custbody_ff_sc_trans_ita_apy_code: Optional[StrictStr] = None
    custbody_bb1_roc_label: Optional[StrictStr] = None
    custbody_ph4014_wtax_reversal_flag: Optional[StrictBool] = None
    custbody_vl_temp: Optional[StrictBool] = None
    custbodyinvoiceonhold: Optional[StrictBool] = None
    custbody_ff_sc_field_block_mapping: Optional[StrictStr] = None
    custbody_vl_invoice_group_no: Optional[StrictStr] = None
    applied: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="NetSuite displays the amount of credit you applied below.")
    custbody_total_quote_gp_percent: Optional[Union[StrictFloat, StrictInt]] = None
    exchange_rate: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The currency&apos;s exchange rate is shown in this field. You can edit the exchange rate for this transaction only, or you can update the currency record with the exchange rate you enter here.", alias="exchangeRate")
    custbody_itr_doc_number: Optional[StrictStr] = None
    custbody_vl_req_contact_number: Optional[StrictStr] = None
    custbody_zc_ai_field_application_data: Optional[StrictStr] = None
    custbody_bb1_val_credited: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_bb1_custom_address: Optional[StrictStr] = None
    originator: Optional[StrictStr] = None
    custbody_bb1_legacytrannumber: Optional[StrictStr] = None
    bill_zip: Optional[StrictStr] = Field(default=None, alias="billZip")
    to_be_faxed: Optional[StrictBool] = Field(default=None, description="Check this box if you want to fax this credit memo. Enter the fax number in the space to the right of the check box if it doesn&apos;t already appear. To fax NetSuite forms, an administrator must first set up fax service at Setup &gt; Company &gt; Printing, Fax and Email Preferences.", alias="toBeFaxed")
    custbody_bb1_release_check: Optional[StrictBool] = None
    custbody_bb1_cr_supportingfile: Optional[StrictStr] = None
    custbody_vl_original_site_mgmt_budget: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_4601_entitytype: Optional[StrictStr] = None
    custbody_ff_sc_e_inv_pdf: Optional[StrictStr] = None
    custbody_bb1_save_as_draft: Optional[StrictBool] = None
    custbody_terms_hc_assumptions: Optional[StrictBool] = None
    custbody_vl_original_labour_budget: Optional[Union[StrictFloat, StrictInt]] = None
    ship_date: Optional[date] = Field(default=None, alias="shipDate")
    shipping_address_text: Optional[StrictStr] = Field(default=None, alias="shippingAddress_text")
    custbody_vl_bill_pymt_je_cr_data: Optional[StrictStr] = None
    custbody_terms_accreditations: Optional[StrictBool] = None
    custbody_bb1_vl_action_approve_field: Optional[StrictStr] = None
    custbody_ff_sc_clickdata: Optional[StrictStr] = None
    message: Optional[StrictStr] = Field(default=None, description="Select a customer message that will appear on the Credit Memo form. To add additional choices to this list, go to Setup &gt; Accounting &gt; Accounting Lists &gt; New &gt; Customer Message.")
    custbody_terms_compartment_maintenance: Optional[StrictBool] = None
    custbody_vl_original_total_budget: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_terms_suppresion_maintenance: Optional[StrictBool] = None
    amount_remaining_total_box: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="amountRemainingTotalBox")
    bill_addressee: Optional[StrictStr] = Field(default=None, alias="billAddressee")
    custbody_bb1_sc_liquid_damages: Optional[Union[StrictFloat, StrictInt]] = None
    due_date: Optional[date] = Field(default=None, alias="dueDate")
    custbody_erpff_p2p_basware_send_note: Optional[StrictStr] = None
    custbody_intercompany_review: Optional[StrictBool] = None
    bill_city: Optional[StrictStr] = Field(default=None, alias="billCity")
    custbody_terms_fire_alarm_install: Optional[StrictBool] = None
    unapplied: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="NetSuite displays the remaining amount of credit to be applied.")
    custbody_terms_compartmentation_hc: Optional[StrictBool] = None
    tran_date: Optional[date] = Field(default=None, description="NetSuite inserts today&apos;s date as the date of this order. You can type or pick another date.", alias="tranDate")
    custbody_bb1_print_bom: Optional[StrictStr] = None
    memo: Optional[StrictStr] = Field(default=None, description="If you wish, enter a memo to describe this credit. It will appear on reports such as the 2-line Accounts Receivable register that your customers can see if you give them permission to log in and view their transaction history.")
    bill_country: Optional[InvoiceBillingAddressCountry] = Field(default=None, alias="billCountry")
    custbody_eff_nsp2p_buyerref: Optional[StrictStr] = None
    custbody_vl_original_material_budget: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_date_of_taxable_supply: Optional[date] = None
    id: Optional[StrictStr] = None
    custbody_vl_export_quote: Optional[StrictStr] = None
    custbody_vl_variation_total_budget: Optional[Union[StrictFloat, StrictInt]] = None
    bill_address: Optional[StrictStr] = Field(default=None, description="The default billing address autofills this field from the customer&apos;s record at Lists &gt; Relationships &gt; Customers. . To enter a different address: * Select another address in the Bill To Select field. * Select New in the Bill To Select field to enter a new billing address.", alias="billAddress")
    custbody_vl_variation_site_manage_budg: Optional[Union[StrictFloat, StrictInt]] = None
    est_gross_profit: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Estimated Gross Profit: Read-only field that equals the revenue amount minus the Est. Cost. At the transaction level, it equals the gross profit of all lines, factoring transaction-level discounts and markups.", alias="estGrossProfit")
    custbody_vl_orig_preliminaries_budget: Optional[Union[StrictFloat, StrictInt]] = None
    end_date: Optional[date] = Field(default=None, alias="endDate")
    custbody_eff_nsp2p_paymentref: Optional[StrictStr] = None
    custbody_cash_register: Optional[StrictBool] = None
    custbody_bb1_custom_notes: Optional[StrictStr] = None
    custbody_terms_fd_healthcheck: Optional[StrictBool] = None
    custbody_subconnotes: Optional[StrictStr] = None
    status: Optional[CreditMemoStatus] = None
    custbody_update: Optional[StrictBool] = None
    custbody_bb1_building_address: Optional[StrictStr] = None
    ship_is_residential: Optional[StrictBool] = Field(default=None, alias="shipIsResidential")
    est_gross_profit_percent: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Estimated Gross Profit Margin, as a percentage: Read-only field that equals the Est. Gross Profit divided by revenue, expressed as a percentage. At the transaction level, it equals the gross profit percent of all lines, factoring transaction-level discounts and markups.", alias="estGrossProfitPercent")
    custbody_zc_3wm_acceptance_reason: Optional[StrictStr] = None
    custbody_msl_qs_invoice: Optional[StrictBool] = None
    tran_is_vsoe_bundle: Optional[StrictBool] = Field(default=None, description="Check this box to include all items added to this transaction as a VSOE bundle.", alias="tranIsVsoeBundle")
    custbody_application_date: Optional[date] = None
    custbody_terms_compartment_support: Optional[StrictBool] = None
    custbody_ph4014_wtax_rate: Optional[Union[StrictFloat, StrictInt]] = None
    ship_override: Optional[StrictBool] = Field(default=None, alias="shipOverride")
    discount_amount: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="discountAmount")
    custbody_nx_idempotency_key: Optional[StrictStr] = None
    custbody_ff_sc_tax_scheme_id: Optional[StrictStr] = None
    which_charges_to_add: Optional[CreditMemoWhichChargesToAdd] = Field(default=None, alias="whichChargesToAdd")
    amount_remaining: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="amountRemaining")
    custbody_eff_nsp2p_serialnumbers: Optional[StrictStr] = None
    custbody_terms_works_assumptions: Optional[StrictBool] = None
    discount_rate: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="NetSuite enters the rate for the discount item you selected. You can change the discount rate for this cash refund. Enter the discount as a dollar amount like 10.00, or as a percentage like 10%.", alias="discountRate")
    bill_state: Optional[StrictStr] = Field(default=None, alias="billState")
    custbody_4601_transactions: Optional[StrictStr] = None
    custbody_terms_hc_accreditations: Optional[StrictBool] = None
    custbody_terms_smoke_vent_maintenance: Optional[StrictBool] = None
    custbody_terms_fd_installation: Optional[StrictBool] = None
    custbody_erpff_p2p_document_sent: Optional[StrictBool] = None
    custbody_zc_ap_bank_integ_id: Optional[StrictStr] = None
    custbody_is_a_variation: Optional[StrictBool] = None
    custbody_auto_send_document_nonstore: Optional[StrictBool] = None
    custbody_estimated_gp: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_zc_ap_bank_acct_balance: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_eff_nsp2p_supplier_notes: Optional[StrictStr] = None
    bill_override: Optional[StrictStr] = Field(default=None, alias="billOverride")
    custbody_erpff_p2p_customer_reference: Optional[StrictStr] = None
    billing_address_text: Optional[StrictStr] = Field(default=None, alias="billingAddress_text")
    discount_total: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="NetSuite enters the amount discounted on this credit memo. If this discount item is taxable, the discount is applied before taxes. If it is not taxable, the discount is applied after taxes.", alias="discountTotal")
    custbody_4110_customregnum: Optional[StrictStr] = None
    custbodyinterlegacytrannumber: Optional[StrictStr] = None
    custbody_vl_group_invoice: Optional[StrictBool] = None
    custbody_ff_sc_deliverydate: Optional[date] = None
    custbody_4601_wtax_withheld: Optional[Union[StrictFloat, StrictInt]] = None
    custbody_bb1_vendor_phone: Optional[StrictStr] = None
    custbody_ff_sc_endpoint_scheme: Optional[StrictStr] = None
    custbody_zc_ap_subsidiary_config_data: Optional[StrictStr] = None
    custbody_bb1_sc_completiondate: Optional[date] = None
    other_ref_num: Optional[StrictStr] = Field(default=None, description="For your customers&apos; convenience, you can enter their purchase order number here.", alias="otherRefNum")
    custbody_vl_total_re_invoice_value: Optional[Union[StrictFloat, StrictInt]] = None
    total: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="NetSuite computes the total of line items and tax and then enters it here.")
    custbody_ff_sc_bank_details_einvoices: Optional[StrictStr] = None
    custbody_terms_fire_alarm_maintenance: Optional[StrictBool] = None
    custbody_ff_sc_tax_id: Optional[StrictStr] = None
    custbody_4601_appliesto: Optional[StrictStr] = None
    custbody_msl_site_address_hidden: Optional[StrictStr] = None
    custbody_nondeductible_processed: Optional[StrictBool] = None
    custbody_ff_sc_endpoint_id: Optional[StrictStr] = None
    custbody_ph4014_wtax_cpay_pacct: Optional[StrictStr] = None
    custbody_date_lsa: Optional[date] = None
    tran_id: Optional[StrictStr] = Field(default=None, description="NetSuite increases the largest credit memo number by one. If you wish, you can type another number. The next credit memo number will revert to the standard pattern. You can enter a maximum of 45 characters in this field.", alias="tranId")
    custbody_counterparty_vat: Optional[StrictStr] = None
    custbody_refno_originvoice: Optional[StrictStr] = None
    last_modified_date: Optional[datetime] = Field(default=None, alias="lastModifiedDate")
    interco_status: Optional[VendorBillIntercoStatus] = Field(default=None, alias="intercoStatus")
    custbody_msl_site_address: Optional[StrictStr] = None
    custbody_ff_sc_b2pmodel: Optional[StrictStr] = None
    custbody_bb1_sc_startdate: Optional[date] = None
    custbody_vl_req_extra_comments: Optional[StrictStr] = None
    custbody_bb1_credit_created: Optional[StrictBool] = None
    ref_name: Optional[StrictStr] = Field(default=None, alias="refName")
    links: Optional[List[NsLink]] = None
    custbody_ff_sc_po_validat_rule_applied: Optional[NsResource] = None
    custbody_bb1_vl_current_approval: Optional[NsResource] = None
    custbody_nx_customer: Optional[Customer] = None
    custbody_zc_ap_pay_from: Optional[NsResource] = None
    custbody_zc_ap_bank_acct_gl_acct: Optional[Account] = None
    custbody_nx_case_type: Optional[NsResource] = None
    custbody_4601_doc_ref_id: Optional[NsResource] = None
    custbody_nx_case: Optional[NsResource] = None
    custbody_vl_req_urgency_tier: Optional[NsResource] = None
    custbody_project_framework: Optional[NsResource] = None
    entity: Optional[VendorBillItemElementCustomer] = None
    custbody_ph4185_bstyle: Optional[NsResource] = None
    custbody_delivery_terms: Optional[NsResource] = None
    custbody_suppliessupplier: Optional[Vendor] = None
    custbody_zc_ap_pay_to: Optional[NsResource] = None
    cseg_paactivitycode: Optional[NsResource] = None
    custbody_nondeductible_ref_tran: Optional[NsResourceCollection] = None
    custbody_bb1_suiteprojects_project: Optional[NsResource] = None
    discount_item: Optional[NsResource] = Field(default=None, alias="discountItem")
    subsidiary: Optional[NsResource] = None
    custbodyprojectqsheader: Optional[NsResource] = None
    custbody_vl_payment_certificate: Optional[NsResource] = None
    interco_transaction: Optional[NsResource] = Field(default=None, alias="intercoTransaction")
    custbody_projectbuyer: Optional[NsResource] = None
    custbody_vl_linked_transaction: Optional[NsResource] = None
    custbody_nx_task: Optional[NsResource] = None
    custbody_nx_asset: Optional[NsResource] = None
    cseg_accreditations: Optional[NsResource] = None
    custbody_regime_code_of_supply: Optional[NsResource] = None
    custbody_nx_projecttask: Optional[NsResource] = None
    custbody_ff_sc_bank_details_sec: Optional[NsResource] = None
    partner: Optional[NsResource] = None
    bill_address_list: Optional[NsResource] = Field(default=None, alias="billAddressList")
    bulk_proc_submission: Optional[NsResource] = Field(default=None, alias="bulkProcSubmission")
    custbody_bb1_created_by: Optional[NsResource] = None
    item: Optional[CreditMemoItemCollection] = None
    custbody_bb1_vl_project_owner: Optional[NsResource] = None
    sales_rep: Optional[VendorBillItemElementCustomer] = Field(default=None, alias="salesRep")
    custbody_vl_req_request_type: Optional[NsResource] = None
    shipping_address: Optional[CreditMemoShippingAddress] = Field(default=None, alias="shippingAddress")
    custbody_nexus_notc: Optional[NsResource] = None
    custbody_bb1_dispute_reason: Optional[NsResource] = None
    custbody_tc_relatedtask: Optional[NsResource] = None
    custbody_regime_code: Optional[NsResource] = None
    custbody_ordertype: Optional[NsResource] = None
    created_from: Optional[NsResource] = Field(default=None, alias="createdFrom")
    custbody_requestor_header: Optional[NsResource] = None
    message_sel: Optional[NsResource] = Field(default=None, alias="messageSel")
    custbodypmscheduler: Optional[NsResource] = None
    job: Optional[VendorBillItemElementCustomer] = None
    custbody_ff_sc_bank_details: Optional[NsResource] = None
    currency: Optional[Currency] = None
    custbody_nondeductible_ref_genjrnl: Optional[NsResource] = None
    posting_period: Optional[NsResource] = Field(default=None, alias="postingPeriod")
    custbody_ff_sc_trans_ita_pay_term: Optional[NsResource] = None
    custbody_bb1_building: Optional[NsResource] = None
    custbody_billingcontact: Optional[NsResource] = None
    custbody_subcontractor: Optional[Vendor] = None
    custbody_bb1_credit_reason: Optional[NsResource] = None
    custbody_4601_pymnt_ref_id: Optional[NsResource] = None
    custbody_alternate_site: Optional[NsResource] = None
    custbody_msl_salesrep: Optional[NsResource] = None
    accounting_book_detail: Optional[CreditMemoAccountingBookDetailCollection] = Field(default=None, alias="accountingBookDetail")
    custbody_transaction_region: Optional[NsResource] = None
    var_class: Optional[NsResource] = Field(default=None, alias="class")
    custbody_vl_new_invoice_number: Optional[NsResourceCollection] = None
    terms: Optional[Term] = None
    custbody_cs_linked_project: Optional[NsResource] = None
    custbody_cs_ventro_estimator: Optional[NsResource] = None
    custbody_eff_nsp2p_xml2nstrans: Optional[NsResource] = None
    location: Optional[NsResource] = None
    ship_method: Optional[NsResource] = Field(default=None, alias="shipMethod")
    custbody_vl_building_list: Optional[NsResourceCollection] = None
    custbody_notc: Optional[NsResource] = None
    custbody_bb1_current_cr_approver: Optional[NsResource] = None
    account: Optional[Account] = None
    apply: Optional[CreditMemoApplyCollection] = None
    custbody_bb1_vl_project: Optional[NsResource] = None
    custbody_mode_of_transport: Optional[NsResource] = None
    billing_address: Optional[CreditMemoBillingAddress] = Field(default=None, alias="billingAddress")
    custbody_4601_entitydefaultwitaxcode: Optional[NsResource] = None
    custbody_payment_type: Optional[NsResource] = None
    custbody_bb1_market: Optional[NsResource] = None
    custbody_vl_req_your_name: Optional[NsResource] = None
    custbody_vl_next_approver: Optional[NsResource] = None
    department: Optional[NsResource] = None
    custbody_bb1_credit_requestor: Optional[NsResource] = None
    ship_address_list: Optional[NsResource] = Field(default=None, alias="shipAddressList")
    __properties: ClassVar[List[str]] = ["custbody_bb1_vl_rejection_reason", "custbody_terms_dry_riser_maintenance", "custbody_bb1_sc_nodates", "startDate", "custbody_terms_lighting_maintenance", "custbody_bb1_quote_released", "custbody_terms_active_payment_install", "custbody_terms_maintenance_assumptions", "custbody_ph4014_wtax_applied", "custbody_bb1_open_cr_value", "custbody_terms_provisional_costs", "custbody_4601_total_amt", "custbody_terms_payment_for_works", "subtotal", "billAddr1", "totalCostEstimate", "amountPaid", "billAddr2", "billAddr3", "salesReturn", "custbody_ph4014_wtax_wamt", "custbody_terms_compartment_install", "custbody_link_lsa", "asOfDate", "createdDate", "custbody_terms_painting_and_decorating", "custbody_nx_customer_signature", "custbody_ph4014_wtax_code", "custbodybillreferencenumber", "custbody_terms_payment_healthchecks", "custbody_bb1_hubspot_record_id", "custbody_adjustment_journal", "custbody_vl_scheduled_auto_approval", "custbody_client_project_manager_email", "custbody_terms_extinguish_maintenance", "email", "custbody_link_name_lsa", "canHaveStackable", "custbody_bb1_vl_action_reject_field", "custbody_zc_ap_gl_acct_balance", "custbody_country_of_origin", "custbody_terms_fd_hc_assumptions", "custbody_unique_asset_code", "custbody_vl_variation_labour_budget", "custbody_zc_3wm_translations", "custbody_vl_variation_prelim_budget", "prevDate", "custbody_itr_nexus", "salesEffectiveDate", "customForm", "custbody_terms_damper_maintenance", "custbody_report_timestamp", "custbody_bb1_cc_note", "custbody_msl_estimated_weeks", "custbody_vl_req_contact_name", "prevRep", "custbody_terms_sprinkler_maintenance", "custbody_ff_sc_endpoint_scheme_id", "shipAddress", "custbody_ph4014_wtax_bamt", "custbody_erpff_p2p_auto_send_document", "externalId", "source", "custbody_wtax_base_url", "custbody_ff_sc_endpoint_op_id", "toBePrinted", "custbody_vl_variation_material_budget", "billPhone", "custbodyhs_integration_embed", "billAttention", "custbody_terms_contingency", "custbodycus_ven_sales_order_department", "custbody_test_terms_pdf", "toBeEmailed", "custbody_msl_commission_generated", "custbody_bb1_link_to_sharepoint", "custbody_zc_ap_main_config_data", "discountDate", "custbody_vl_req_date_required", "custbody_ff_sc_trans_ita_apy_code", "custbody_bb1_roc_label", "custbody_ph4014_wtax_reversal_flag", "custbody_vl_temp", "custbodyinvoiceonhold", "custbody_ff_sc_field_block_mapping", "custbody_vl_invoice_group_no", "applied", "custbody_total_quote_gp_percent", "exchangeRate", "custbody_itr_doc_number", "custbody_vl_req_contact_number", "custbody_zc_ai_field_application_data", "custbody_bb1_val_credited", "custbody_bb1_custom_address", "originator", "custbody_bb1_legacytrannumber", "billZip", "toBeFaxed", "custbody_bb1_release_check", "custbody_bb1_cr_supportingfile", "custbody_vl_original_site_mgmt_budget", "custbody_4601_entitytype", "custbody_ff_sc_e_inv_pdf", "custbody_bb1_save_as_draft", "custbody_terms_hc_assumptions", "custbody_vl_original_labour_budget", "shipDate", "shippingAddress_text", "custbody_vl_bill_pymt_je_cr_data", "custbody_terms_accreditations", "custbody_bb1_vl_action_approve_field", "custbody_ff_sc_clickdata", "message", "custbody_terms_compartment_maintenance", "custbody_vl_original_total_budget", "custbody_terms_suppresion_maintenance", "amountRemainingTotalBox", "billAddressee", "custbody_bb1_sc_liquid_damages", "dueDate", "custbody_erpff_p2p_basware_send_note", "custbody_intercompany_review", "billCity", "custbody_terms_fire_alarm_install", "unapplied", "custbody_terms_compartmentation_hc", "tranDate", "custbody_bb1_print_bom", "memo", "billCountry", "custbody_eff_nsp2p_buyerref", "custbody_vl_original_material_budget", "custbody_date_of_taxable_supply", "id", "custbody_vl_export_quote", "custbody_vl_variation_total_budget", "billAddress", "custbody_vl_variation_site_manage_budg", "estGrossProfit", "custbody_vl_orig_preliminaries_budget", "endDate", "custbody_eff_nsp2p_paymentref", "custbody_cash_register", "custbody_bb1_custom_notes", "custbody_terms_fd_healthcheck", "custbody_subconnotes", "status", "custbody_update", "custbody_bb1_building_address", "shipIsResidential", "estGrossProfitPercent", "custbody_zc_3wm_acceptance_reason", "custbody_msl_qs_invoice", "tranIsVsoeBundle", "custbody_application_date", "custbody_terms_compartment_support", "custbody_ph4014_wtax_rate", "shipOverride", "discountAmount", "custbody_nx_idempotency_key", "custbody_ff_sc_tax_scheme_id", "whichChargesToAdd", "amountRemaining", "custbody_eff_nsp2p_serialnumbers", "custbody_terms_works_assumptions", "discountRate", "billState", "custbody_4601_transactions", "custbody_terms_hc_accreditations", "custbody_terms_smoke_vent_maintenance", "custbody_terms_fd_installation", "custbody_erpff_p2p_document_sent", "custbody_zc_ap_bank_integ_id", "custbody_is_a_variation", "custbody_auto_send_document_nonstore", "custbody_estimated_gp", "custbody_zc_ap_bank_acct_balance", "custbody_eff_nsp2p_supplier_notes", "billOverride", "custbody_erpff_p2p_customer_reference", "billingAddress_text", "discountTotal", "custbody_4110_customregnum", "custbodyinterlegacytrannumber", "custbody_vl_group_invoice", "custbody_ff_sc_deliverydate", "custbody_4601_wtax_withheld", "custbody_bb1_vendor_phone", "custbody_ff_sc_endpoint_scheme", "custbody_zc_ap_subsidiary_config_data", "custbody_bb1_sc_completiondate", "otherRefNum", "custbody_vl_total_re_invoice_value", "total", "custbody_ff_sc_bank_details_einvoices", "custbody_terms_fire_alarm_maintenance", "custbody_ff_sc_tax_id", "custbody_4601_appliesto", "custbody_msl_site_address_hidden", "custbody_nondeductible_processed", "custbody_ff_sc_endpoint_id", "custbody_ph4014_wtax_cpay_pacct", "custbody_date_lsa", "tranId", "custbody_counterparty_vat", "custbody_refno_originvoice", "lastModifiedDate", "intercoStatus", "custbody_msl_site_address", "custbody_ff_sc_b2pmodel", "custbody_bb1_sc_startdate", "custbody_vl_req_extra_comments", "custbody_bb1_credit_created", "refName", "links", "custbody_ff_sc_po_validat_rule_applied", "custbody_bb1_vl_current_approval", "custbody_nx_customer", "custbody_zc_ap_pay_from", "custbody_zc_ap_bank_acct_gl_acct", "custbody_nx_case_type", "custbody_4601_doc_ref_id", "custbody_nx_case", "custbody_vl_req_urgency_tier", "custbody_project_framework", "entity", "custbody_ph4185_bstyle", "custbody_delivery_terms", "custbody_suppliessupplier", "custbody_zc_ap_pay_to", "cseg_paactivitycode", "custbody_nondeductible_ref_tran", "custbody_bb1_suiteprojects_project", "discountItem", "subsidiary", "custbodyprojectqsheader", "custbody_vl_payment_certificate", "intercoTransaction", "custbody_projectbuyer", "custbody_vl_linked_transaction", "custbody_nx_task", "custbody_nx_asset", "cseg_accreditations", "custbody_regime_code_of_supply", "custbody_nx_projecttask", "custbody_ff_sc_bank_details_sec", "partner", "billAddressList", "bulkProcSubmission", "custbody_bb1_created_by", "item", "custbody_bb1_vl_project_owner", "salesRep", "custbody_vl_req_request_type", "shippingAddress", "custbody_nexus_notc", "custbody_bb1_dispute_reason", "custbody_tc_relatedtask", "custbody_regime_code", "custbody_ordertype", "createdFrom", "custbody_requestor_header", "messageSel", "custbodypmscheduler", "job", "custbody_ff_sc_bank_details", "currency", "custbody_nondeductible_ref_genjrnl", "postingPeriod", "custbody_ff_sc_trans_ita_pay_term", "custbody_bb1_building", "custbody_billingcontact", "custbody_subcontractor", "custbody_bb1_credit_reason", "custbody_4601_pymnt_ref_id", "custbody_alternate_site", "custbody_msl_salesrep", "accountingBookDetail", "custbody_transaction_region", "class", "custbody_vl_new_invoice_number", "terms", "custbody_cs_linked_project", "custbody_cs_ventro_estimator", "custbody_eff_nsp2p_xml2nstrans", "location", "shipMethod", "custbody_vl_building_list", "custbody_notc", "custbody_bb1_current_cr_approver", "account", "apply", "custbody_bb1_vl_project", "custbody_mode_of_transport", "billingAddress", "custbody_4601_entitydefaultwitaxcode", "custbody_payment_type", "custbody_bb1_market", "custbody_vl_req_your_name", "custbody_vl_next_approver", "department", "custbody_bb1_credit_requestor", "shipAddressList"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of CreditMemo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        """
        excluded_fields: Set[str] = set([
            "links",
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of custom_form
        if self.custom_form:
            _dict['customForm'] = self.custom_form.to_dict()
        # override the default output from pydantic by calling `to_dict()` of source
        if self.source:
            _dict['source'] = self.source.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bill_country
        if self.bill_country:
            _dict['billCountry'] = self.bill_country.to_dict()
        # override the default output from pydantic by calling `to_dict()` of status
        if self.status:
            _dict['status'] = self.status.to_dict()
        # override the default output from pydantic by calling `to_dict()` of which_charges_to_add
        if self.which_charges_to_add:
            _dict['whichChargesToAdd'] = self.which_charges_to_add.to_dict()
        # override the default output from pydantic by calling `to_dict()` of interco_status
        if self.interco_status:
            _dict['intercoStatus'] = self.interco_status.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in links (list)
        _items = []
        if self.links:
            for _item_links in self.links:
                if _item_links:
                    _items.append(_item_links.to_dict())
            _dict['links'] = _items
        # override the default output from pydantic by calling `to_dict()` of custbody_ff_sc_po_validat_rule_applied
        if self.custbody_ff_sc_po_validat_rule_applied:
            _dict['custbody_ff_sc_po_validat_rule_applied'] = self.custbody_ff_sc_po_validat_rule_applied.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_vl_current_approval
        if self.custbody_bb1_vl_current_approval:
            _dict['custbody_bb1_vl_current_approval'] = self.custbody_bb1_vl_current_approval.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nx_customer
        if self.custbody_nx_customer:
            _dict['custbody_nx_customer'] = self.custbody_nx_customer.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_zc_ap_pay_from
        if self.custbody_zc_ap_pay_from:
            _dict['custbody_zc_ap_pay_from'] = self.custbody_zc_ap_pay_from.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_zc_ap_bank_acct_gl_acct
        if self.custbody_zc_ap_bank_acct_gl_acct:
            _dict['custbody_zc_ap_bank_acct_gl_acct'] = self.custbody_zc_ap_bank_acct_gl_acct.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nx_case_type
        if self.custbody_nx_case_type:
            _dict['custbody_nx_case_type'] = self.custbody_nx_case_type.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_4601_doc_ref_id
        if self.custbody_4601_doc_ref_id:
            _dict['custbody_4601_doc_ref_id'] = self.custbody_4601_doc_ref_id.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nx_case
        if self.custbody_nx_case:
            _dict['custbody_nx_case'] = self.custbody_nx_case.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_req_urgency_tier
        if self.custbody_vl_req_urgency_tier:
            _dict['custbody_vl_req_urgency_tier'] = self.custbody_vl_req_urgency_tier.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_project_framework
        if self.custbody_project_framework:
            _dict['custbody_project_framework'] = self.custbody_project_framework.to_dict()
        # override the default output from pydantic by calling `to_dict()` of entity
        if self.entity:
            _dict['entity'] = self.entity.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_ph4185_bstyle
        if self.custbody_ph4185_bstyle:
            _dict['custbody_ph4185_bstyle'] = self.custbody_ph4185_bstyle.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_delivery_terms
        if self.custbody_delivery_terms:
            _dict['custbody_delivery_terms'] = self.custbody_delivery_terms.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_suppliessupplier
        if self.custbody_suppliessupplier:
            _dict['custbody_suppliessupplier'] = self.custbody_suppliessupplier.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_zc_ap_pay_to
        if self.custbody_zc_ap_pay_to:
            _dict['custbody_zc_ap_pay_to'] = self.custbody_zc_ap_pay_to.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cseg_paactivitycode
        if self.cseg_paactivitycode:
            _dict['cseg_paactivitycode'] = self.cseg_paactivitycode.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nondeductible_ref_tran
        if self.custbody_nondeductible_ref_tran:
            _dict['custbody_nondeductible_ref_tran'] = self.custbody_nondeductible_ref_tran.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_suiteprojects_project
        if self.custbody_bb1_suiteprojects_project:
            _dict['custbody_bb1_suiteprojects_project'] = self.custbody_bb1_suiteprojects_project.to_dict()
        # override the default output from pydantic by calling `to_dict()` of discount_item
        if self.discount_item:
            _dict['discountItem'] = self.discount_item.to_dict()
        # override the default output from pydantic by calling `to_dict()` of subsidiary
        if self.subsidiary:
            _dict['subsidiary'] = self.subsidiary.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbodyprojectqsheader
        if self.custbodyprojectqsheader:
            _dict['custbodyprojectqsheader'] = self.custbodyprojectqsheader.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_payment_certificate
        if self.custbody_vl_payment_certificate:
            _dict['custbody_vl_payment_certificate'] = self.custbody_vl_payment_certificate.to_dict()
        # override the default output from pydantic by calling `to_dict()` of interco_transaction
        if self.interco_transaction:
            _dict['intercoTransaction'] = self.interco_transaction.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_projectbuyer
        if self.custbody_projectbuyer:
            _dict['custbody_projectbuyer'] = self.custbody_projectbuyer.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_linked_transaction
        if self.custbody_vl_linked_transaction:
            _dict['custbody_vl_linked_transaction'] = self.custbody_vl_linked_transaction.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nx_task
        if self.custbody_nx_task:
            _dict['custbody_nx_task'] = self.custbody_nx_task.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nx_asset
        if self.custbody_nx_asset:
            _dict['custbody_nx_asset'] = self.custbody_nx_asset.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cseg_accreditations
        if self.cseg_accreditations:
            _dict['cseg_accreditations'] = self.cseg_accreditations.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_regime_code_of_supply
        if self.custbody_regime_code_of_supply:
            _dict['custbody_regime_code_of_supply'] = self.custbody_regime_code_of_supply.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nx_projecttask
        if self.custbody_nx_projecttask:
            _dict['custbody_nx_projecttask'] = self.custbody_nx_projecttask.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_ff_sc_bank_details_sec
        if self.custbody_ff_sc_bank_details_sec:
            _dict['custbody_ff_sc_bank_details_sec'] = self.custbody_ff_sc_bank_details_sec.to_dict()
        # override the default output from pydantic by calling `to_dict()` of partner
        if self.partner:
            _dict['partner'] = self.partner.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bill_address_list
        if self.bill_address_list:
            _dict['billAddressList'] = self.bill_address_list.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bulk_proc_submission
        if self.bulk_proc_submission:
            _dict['bulkProcSubmission'] = self.bulk_proc_submission.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_created_by
        if self.custbody_bb1_created_by:
            _dict['custbody_bb1_created_by'] = self.custbody_bb1_created_by.to_dict()
        # override the default output from pydantic by calling `to_dict()` of item
        if self.item:
            _dict['item'] = self.item.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_vl_project_owner
        if self.custbody_bb1_vl_project_owner:
            _dict['custbody_bb1_vl_project_owner'] = self.custbody_bb1_vl_project_owner.to_dict()
        # override the default output from pydantic by calling `to_dict()` of sales_rep
        if self.sales_rep:
            _dict['salesRep'] = self.sales_rep.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_req_request_type
        if self.custbody_vl_req_request_type:
            _dict['custbody_vl_req_request_type'] = self.custbody_vl_req_request_type.to_dict()
        # override the default output from pydantic by calling `to_dict()` of shipping_address
        if self.shipping_address:
            _dict['shippingAddress'] = self.shipping_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nexus_notc
        if self.custbody_nexus_notc:
            _dict['custbody_nexus_notc'] = self.custbody_nexus_notc.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_dispute_reason
        if self.custbody_bb1_dispute_reason:
            _dict['custbody_bb1_dispute_reason'] = self.custbody_bb1_dispute_reason.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_tc_relatedtask
        if self.custbody_tc_relatedtask:
            _dict['custbody_tc_relatedtask'] = self.custbody_tc_relatedtask.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_regime_code
        if self.custbody_regime_code:
            _dict['custbody_regime_code'] = self.custbody_regime_code.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_ordertype
        if self.custbody_ordertype:
            _dict['custbody_ordertype'] = self.custbody_ordertype.to_dict()
        # override the default output from pydantic by calling `to_dict()` of created_from
        if self.created_from:
            _dict['createdFrom'] = self.created_from.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_requestor_header
        if self.custbody_requestor_header:
            _dict['custbody_requestor_header'] = self.custbody_requestor_header.to_dict()
        # override the default output from pydantic by calling `to_dict()` of message_sel
        if self.message_sel:
            _dict['messageSel'] = self.message_sel.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbodypmscheduler
        if self.custbodypmscheduler:
            _dict['custbodypmscheduler'] = self.custbodypmscheduler.to_dict()
        # override the default output from pydantic by calling `to_dict()` of job
        if self.job:
            _dict['job'] = self.job.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_ff_sc_bank_details
        if self.custbody_ff_sc_bank_details:
            _dict['custbody_ff_sc_bank_details'] = self.custbody_ff_sc_bank_details.to_dict()
        # override the default output from pydantic by calling `to_dict()` of currency
        if self.currency:
            _dict['currency'] = self.currency.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_nondeductible_ref_genjrnl
        if self.custbody_nondeductible_ref_genjrnl:
            _dict['custbody_nondeductible_ref_genjrnl'] = self.custbody_nondeductible_ref_genjrnl.to_dict()
        # override the default output from pydantic by calling `to_dict()` of posting_period
        if self.posting_period:
            _dict['postingPeriod'] = self.posting_period.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_ff_sc_trans_ita_pay_term
        if self.custbody_ff_sc_trans_ita_pay_term:
            _dict['custbody_ff_sc_trans_ita_pay_term'] = self.custbody_ff_sc_trans_ita_pay_term.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_building
        if self.custbody_bb1_building:
            _dict['custbody_bb1_building'] = self.custbody_bb1_building.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_billingcontact
        if self.custbody_billingcontact:
            _dict['custbody_billingcontact'] = self.custbody_billingcontact.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_subcontractor
        if self.custbody_subcontractor:
            _dict['custbody_subcontractor'] = self.custbody_subcontractor.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_credit_reason
        if self.custbody_bb1_credit_reason:
            _dict['custbody_bb1_credit_reason'] = self.custbody_bb1_credit_reason.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_4601_pymnt_ref_id
        if self.custbody_4601_pymnt_ref_id:
            _dict['custbody_4601_pymnt_ref_id'] = self.custbody_4601_pymnt_ref_id.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_alternate_site
        if self.custbody_alternate_site:
            _dict['custbody_alternate_site'] = self.custbody_alternate_site.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_msl_salesrep
        if self.custbody_msl_salesrep:
            _dict['custbody_msl_salesrep'] = self.custbody_msl_salesrep.to_dict()
        # override the default output from pydantic by calling `to_dict()` of accounting_book_detail
        if self.accounting_book_detail:
            _dict['accountingBookDetail'] = self.accounting_book_detail.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_transaction_region
        if self.custbody_transaction_region:
            _dict['custbody_transaction_region'] = self.custbody_transaction_region.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_class
        if self.var_class:
            _dict['class'] = self.var_class.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_new_invoice_number
        if self.custbody_vl_new_invoice_number:
            _dict['custbody_vl_new_invoice_number'] = self.custbody_vl_new_invoice_number.to_dict()
        # override the default output from pydantic by calling `to_dict()` of terms
        if self.terms:
            _dict['terms'] = self.terms.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_cs_linked_project
        if self.custbody_cs_linked_project:
            _dict['custbody_cs_linked_project'] = self.custbody_cs_linked_project.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_cs_ventro_estimator
        if self.custbody_cs_ventro_estimator:
            _dict['custbody_cs_ventro_estimator'] = self.custbody_cs_ventro_estimator.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_eff_nsp2p_xml2nstrans
        if self.custbody_eff_nsp2p_xml2nstrans:
            _dict['custbody_eff_nsp2p_xml2nstrans'] = self.custbody_eff_nsp2p_xml2nstrans.to_dict()
        # override the default output from pydantic by calling `to_dict()` of location
        if self.location:
            _dict['location'] = self.location.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ship_method
        if self.ship_method:
            _dict['shipMethod'] = self.ship_method.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_building_list
        if self.custbody_vl_building_list:
            _dict['custbody_vl_building_list'] = self.custbody_vl_building_list.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_notc
        if self.custbody_notc:
            _dict['custbody_notc'] = self.custbody_notc.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_current_cr_approver
        if self.custbody_bb1_current_cr_approver:
            _dict['custbody_bb1_current_cr_approver'] = self.custbody_bb1_current_cr_approver.to_dict()
        # override the default output from pydantic by calling `to_dict()` of account
        if self.account:
            _dict['account'] = self.account.to_dict()
        # override the default output from pydantic by calling `to_dict()` of apply
        if self.apply:
            _dict['apply'] = self.apply.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_vl_project
        if self.custbody_bb1_vl_project:
            _dict['custbody_bb1_vl_project'] = self.custbody_bb1_vl_project.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_mode_of_transport
        if self.custbody_mode_of_transport:
            _dict['custbody_mode_of_transport'] = self.custbody_mode_of_transport.to_dict()
        # override the default output from pydantic by calling `to_dict()` of billing_address
        if self.billing_address:
            _dict['billingAddress'] = self.billing_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_4601_entitydefaultwitaxcode
        if self.custbody_4601_entitydefaultwitaxcode:
            _dict['custbody_4601_entitydefaultwitaxcode'] = self.custbody_4601_entitydefaultwitaxcode.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_payment_type
        if self.custbody_payment_type:
            _dict['custbody_payment_type'] = self.custbody_payment_type.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_market
        if self.custbody_bb1_market:
            _dict['custbody_bb1_market'] = self.custbody_bb1_market.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_req_your_name
        if self.custbody_vl_req_your_name:
            _dict['custbody_vl_req_your_name'] = self.custbody_vl_req_your_name.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_vl_next_approver
        if self.custbody_vl_next_approver:
            _dict['custbody_vl_next_approver'] = self.custbody_vl_next_approver.to_dict()
        # override the default output from pydantic by calling `to_dict()` of department
        if self.department:
            _dict['department'] = self.department.to_dict()
        # override the default output from pydantic by calling `to_dict()` of custbody_bb1_credit_requestor
        if self.custbody_bb1_credit_requestor:
            _dict['custbody_bb1_credit_requestor'] = self.custbody_bb1_credit_requestor.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ship_address_list
        if self.ship_address_list:
            _dict['shipAddressList'] = self.ship_address_list.to_dict()
        # set to None if custbody_bb1_vl_rejection_reason (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_vl_rejection_reason is None and "custbody_bb1_vl_rejection_reason" in self.model_fields_set:
            _dict['custbody_bb1_vl_rejection_reason'] = None

        # set to None if start_date (nullable) is None
        # and model_fields_set contains the field
        if self.start_date is None and "start_date" in self.model_fields_set:
            _dict['startDate'] = None

        # set to None if custbody_bb1_open_cr_value (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_open_cr_value is None and "custbody_bb1_open_cr_value" in self.model_fields_set:
            _dict['custbody_bb1_open_cr_value'] = None

        # set to None if custbody_4601_total_amt (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_4601_total_amt is None and "custbody_4601_total_amt" in self.model_fields_set:
            _dict['custbody_4601_total_amt'] = None

        # set to None if subtotal (nullable) is None
        # and model_fields_set contains the field
        if self.subtotal is None and "subtotal" in self.model_fields_set:
            _dict['subtotal'] = None

        # set to None if bill_addr1 (nullable) is None
        # and model_fields_set contains the field
        if self.bill_addr1 is None and "bill_addr1" in self.model_fields_set:
            _dict['billAddr1'] = None

        # set to None if total_cost_estimate (nullable) is None
        # and model_fields_set contains the field
        if self.total_cost_estimate is None and "total_cost_estimate" in self.model_fields_set:
            _dict['totalCostEstimate'] = None

        # set to None if amount_paid (nullable) is None
        # and model_fields_set contains the field
        if self.amount_paid is None and "amount_paid" in self.model_fields_set:
            _dict['amountPaid'] = None

        # set to None if bill_addr2 (nullable) is None
        # and model_fields_set contains the field
        if self.bill_addr2 is None and "bill_addr2" in self.model_fields_set:
            _dict['billAddr2'] = None

        # set to None if bill_addr3 (nullable) is None
        # and model_fields_set contains the field
        if self.bill_addr3 is None and "bill_addr3" in self.model_fields_set:
            _dict['billAddr3'] = None

        # set to None if sales_return (nullable) is None
        # and model_fields_set contains the field
        if self.sales_return is None and "sales_return" in self.model_fields_set:
            _dict['salesReturn'] = None

        # set to None if custbody_ph4014_wtax_wamt (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ph4014_wtax_wamt is None and "custbody_ph4014_wtax_wamt" in self.model_fields_set:
            _dict['custbody_ph4014_wtax_wamt'] = None

        # set to None if custbody_link_lsa (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_link_lsa is None and "custbody_link_lsa" in self.model_fields_set:
            _dict['custbody_link_lsa'] = None

        # set to None if as_of_date (nullable) is None
        # and model_fields_set contains the field
        if self.as_of_date is None and "as_of_date" in self.model_fields_set:
            _dict['asOfDate'] = None

        # set to None if created_date (nullable) is None
        # and model_fields_set contains the field
        if self.created_date is None and "created_date" in self.model_fields_set:
            _dict['createdDate'] = None

        # set to None if custbody_nx_customer_signature (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_nx_customer_signature is None and "custbody_nx_customer_signature" in self.model_fields_set:
            _dict['custbody_nx_customer_signature'] = None

        # set to None if custbody_ph4014_wtax_code (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ph4014_wtax_code is None and "custbody_ph4014_wtax_code" in self.model_fields_set:
            _dict['custbody_ph4014_wtax_code'] = None

        # set to None if custbodybillreferencenumber (nullable) is None
        # and model_fields_set contains the field
        if self.custbodybillreferencenumber is None and "custbodybillreferencenumber" in self.model_fields_set:
            _dict['custbodybillreferencenumber'] = None

        # set to None if custbody_bb1_hubspot_record_id (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_hubspot_record_id is None and "custbody_bb1_hubspot_record_id" in self.model_fields_set:
            _dict['custbody_bb1_hubspot_record_id'] = None

        # set to None if custbody_client_project_manager_email (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_client_project_manager_email is None and "custbody_client_project_manager_email" in self.model_fields_set:
            _dict['custbody_client_project_manager_email'] = None

        # set to None if email (nullable) is None
        # and model_fields_set contains the field
        if self.email is None and "email" in self.model_fields_set:
            _dict['email'] = None

        # set to None if custbody_link_name_lsa (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_link_name_lsa is None and "custbody_link_name_lsa" in self.model_fields_set:
            _dict['custbody_link_name_lsa'] = None

        # set to None if custbody_bb1_vl_action_reject_field (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_vl_action_reject_field is None and "custbody_bb1_vl_action_reject_field" in self.model_fields_set:
            _dict['custbody_bb1_vl_action_reject_field'] = None

        # set to None if custbody_zc_ap_gl_acct_balance (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_ap_gl_acct_balance is None and "custbody_zc_ap_gl_acct_balance" in self.model_fields_set:
            _dict['custbody_zc_ap_gl_acct_balance'] = None

        # set to None if custbody_country_of_origin (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_country_of_origin is None and "custbody_country_of_origin" in self.model_fields_set:
            _dict['custbody_country_of_origin'] = None

        # set to None if custbody_unique_asset_code (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_unique_asset_code is None and "custbody_unique_asset_code" in self.model_fields_set:
            _dict['custbody_unique_asset_code'] = None

        # set to None if custbody_vl_variation_labour_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_variation_labour_budget is None and "custbody_vl_variation_labour_budget" in self.model_fields_set:
            _dict['custbody_vl_variation_labour_budget'] = None

        # set to None if custbody_zc_3wm_translations (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_3wm_translations is None and "custbody_zc_3wm_translations" in self.model_fields_set:
            _dict['custbody_zc_3wm_translations'] = None

        # set to None if custbody_vl_variation_prelim_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_variation_prelim_budget is None and "custbody_vl_variation_prelim_budget" in self.model_fields_set:
            _dict['custbody_vl_variation_prelim_budget'] = None

        # set to None if prev_date (nullable) is None
        # and model_fields_set contains the field
        if self.prev_date is None and "prev_date" in self.model_fields_set:
            _dict['prevDate'] = None

        # set to None if custbody_itr_nexus (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_itr_nexus is None and "custbody_itr_nexus" in self.model_fields_set:
            _dict['custbody_itr_nexus'] = None

        # set to None if sales_effective_date (nullable) is None
        # and model_fields_set contains the field
        if self.sales_effective_date is None and "sales_effective_date" in self.model_fields_set:
            _dict['salesEffectiveDate'] = None

        # set to None if custbody_report_timestamp (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_report_timestamp is None and "custbody_report_timestamp" in self.model_fields_set:
            _dict['custbody_report_timestamp'] = None

        # set to None if custbody_bb1_cc_note (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_cc_note is None and "custbody_bb1_cc_note" in self.model_fields_set:
            _dict['custbody_bb1_cc_note'] = None

        # set to None if custbody_msl_estimated_weeks (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_msl_estimated_weeks is None and "custbody_msl_estimated_weeks" in self.model_fields_set:
            _dict['custbody_msl_estimated_weeks'] = None

        # set to None if custbody_vl_req_contact_name (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_req_contact_name is None and "custbody_vl_req_contact_name" in self.model_fields_set:
            _dict['custbody_vl_req_contact_name'] = None

        # set to None if prev_rep (nullable) is None
        # and model_fields_set contains the field
        if self.prev_rep is None and "prev_rep" in self.model_fields_set:
            _dict['prevRep'] = None

        # set to None if custbody_ff_sc_endpoint_scheme_id (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_endpoint_scheme_id is None and "custbody_ff_sc_endpoint_scheme_id" in self.model_fields_set:
            _dict['custbody_ff_sc_endpoint_scheme_id'] = None

        # set to None if ship_address (nullable) is None
        # and model_fields_set contains the field
        if self.ship_address is None and "ship_address" in self.model_fields_set:
            _dict['shipAddress'] = None

        # set to None if custbody_ph4014_wtax_bamt (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ph4014_wtax_bamt is None and "custbody_ph4014_wtax_bamt" in self.model_fields_set:
            _dict['custbody_ph4014_wtax_bamt'] = None

        # set to None if external_id (nullable) is None
        # and model_fields_set contains the field
        if self.external_id is None and "external_id" in self.model_fields_set:
            _dict['externalId'] = None

        # set to None if custbody_wtax_base_url (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_wtax_base_url is None and "custbody_wtax_base_url" in self.model_fields_set:
            _dict['custbody_wtax_base_url'] = None

        # set to None if custbody_ff_sc_endpoint_op_id (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_endpoint_op_id is None and "custbody_ff_sc_endpoint_op_id" in self.model_fields_set:
            _dict['custbody_ff_sc_endpoint_op_id'] = None

        # set to None if custbody_vl_variation_material_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_variation_material_budget is None and "custbody_vl_variation_material_budget" in self.model_fields_set:
            _dict['custbody_vl_variation_material_budget'] = None

        # set to None if bill_phone (nullable) is None
        # and model_fields_set contains the field
        if self.bill_phone is None and "bill_phone" in self.model_fields_set:
            _dict['billPhone'] = None

        # set to None if custbodyhs_integration_embed (nullable) is None
        # and model_fields_set contains the field
        if self.custbodyhs_integration_embed is None and "custbodyhs_integration_embed" in self.model_fields_set:
            _dict['custbodyhs_integration_embed'] = None

        # set to None if bill_attention (nullable) is None
        # and model_fields_set contains the field
        if self.bill_attention is None and "bill_attention" in self.model_fields_set:
            _dict['billAttention'] = None

        # set to None if custbodycus_ven_sales_order_department (nullable) is None
        # and model_fields_set contains the field
        if self.custbodycus_ven_sales_order_department is None and "custbodycus_ven_sales_order_department" in self.model_fields_set:
            _dict['custbodycus_ven_sales_order_department'] = None

        # set to None if custbody_bb1_link_to_sharepoint (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_link_to_sharepoint is None and "custbody_bb1_link_to_sharepoint" in self.model_fields_set:
            _dict['custbody_bb1_link_to_sharepoint'] = None

        # set to None if custbody_zc_ap_main_config_data (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_ap_main_config_data is None and "custbody_zc_ap_main_config_data" in self.model_fields_set:
            _dict['custbody_zc_ap_main_config_data'] = None

        # set to None if discount_date (nullable) is None
        # and model_fields_set contains the field
        if self.discount_date is None and "discount_date" in self.model_fields_set:
            _dict['discountDate'] = None

        # set to None if custbody_vl_req_date_required (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_req_date_required is None and "custbody_vl_req_date_required" in self.model_fields_set:
            _dict['custbody_vl_req_date_required'] = None

        # set to None if custbody_ff_sc_trans_ita_apy_code (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_trans_ita_apy_code is None and "custbody_ff_sc_trans_ita_apy_code" in self.model_fields_set:
            _dict['custbody_ff_sc_trans_ita_apy_code'] = None

        # set to None if custbody_bb1_roc_label (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_roc_label is None and "custbody_bb1_roc_label" in self.model_fields_set:
            _dict['custbody_bb1_roc_label'] = None

        # set to None if custbody_ff_sc_field_block_mapping (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_field_block_mapping is None and "custbody_ff_sc_field_block_mapping" in self.model_fields_set:
            _dict['custbody_ff_sc_field_block_mapping'] = None

        # set to None if custbody_vl_invoice_group_no (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_invoice_group_no is None and "custbody_vl_invoice_group_no" in self.model_fields_set:
            _dict['custbody_vl_invoice_group_no'] = None

        # set to None if applied (nullable) is None
        # and model_fields_set contains the field
        if self.applied is None and "applied" in self.model_fields_set:
            _dict['applied'] = None

        # set to None if custbody_total_quote_gp_percent (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_total_quote_gp_percent is None and "custbody_total_quote_gp_percent" in self.model_fields_set:
            _dict['custbody_total_quote_gp_percent'] = None

        # set to None if exchange_rate (nullable) is None
        # and model_fields_set contains the field
        if self.exchange_rate is None and "exchange_rate" in self.model_fields_set:
            _dict['exchangeRate'] = None

        # set to None if custbody_itr_doc_number (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_itr_doc_number is None and "custbody_itr_doc_number" in self.model_fields_set:
            _dict['custbody_itr_doc_number'] = None

        # set to None if custbody_vl_req_contact_number (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_req_contact_number is None and "custbody_vl_req_contact_number" in self.model_fields_set:
            _dict['custbody_vl_req_contact_number'] = None

        # set to None if custbody_zc_ai_field_application_data (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_ai_field_application_data is None and "custbody_zc_ai_field_application_data" in self.model_fields_set:
            _dict['custbody_zc_ai_field_application_data'] = None

        # set to None if custbody_bb1_val_credited (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_val_credited is None and "custbody_bb1_val_credited" in self.model_fields_set:
            _dict['custbody_bb1_val_credited'] = None

        # set to None if custbody_bb1_custom_address (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_custom_address is None and "custbody_bb1_custom_address" in self.model_fields_set:
            _dict['custbody_bb1_custom_address'] = None

        # set to None if originator (nullable) is None
        # and model_fields_set contains the field
        if self.originator is None and "originator" in self.model_fields_set:
            _dict['originator'] = None

        # set to None if custbody_bb1_legacytrannumber (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_legacytrannumber is None and "custbody_bb1_legacytrannumber" in self.model_fields_set:
            _dict['custbody_bb1_legacytrannumber'] = None

        # set to None if bill_zip (nullable) is None
        # and model_fields_set contains the field
        if self.bill_zip is None and "bill_zip" in self.model_fields_set:
            _dict['billZip'] = None

        # set to None if custbody_bb1_cr_supportingfile (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_cr_supportingfile is None and "custbody_bb1_cr_supportingfile" in self.model_fields_set:
            _dict['custbody_bb1_cr_supportingfile'] = None

        # set to None if custbody_vl_original_site_mgmt_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_original_site_mgmt_budget is None and "custbody_vl_original_site_mgmt_budget" in self.model_fields_set:
            _dict['custbody_vl_original_site_mgmt_budget'] = None

        # set to None if custbody_4601_entitytype (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_4601_entitytype is None and "custbody_4601_entitytype" in self.model_fields_set:
            _dict['custbody_4601_entitytype'] = None

        # set to None if custbody_ff_sc_e_inv_pdf (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_e_inv_pdf is None and "custbody_ff_sc_e_inv_pdf" in self.model_fields_set:
            _dict['custbody_ff_sc_e_inv_pdf'] = None

        # set to None if custbody_vl_original_labour_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_original_labour_budget is None and "custbody_vl_original_labour_budget" in self.model_fields_set:
            _dict['custbody_vl_original_labour_budget'] = None

        # set to None if ship_date (nullable) is None
        # and model_fields_set contains the field
        if self.ship_date is None and "ship_date" in self.model_fields_set:
            _dict['shipDate'] = None

        # set to None if shipping_address_text (nullable) is None
        # and model_fields_set contains the field
        if self.shipping_address_text is None and "shipping_address_text" in self.model_fields_set:
            _dict['shippingAddress_text'] = None

        # set to None if custbody_vl_bill_pymt_je_cr_data (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_bill_pymt_je_cr_data is None and "custbody_vl_bill_pymt_je_cr_data" in self.model_fields_set:
            _dict['custbody_vl_bill_pymt_je_cr_data'] = None

        # set to None if custbody_bb1_vl_action_approve_field (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_vl_action_approve_field is None and "custbody_bb1_vl_action_approve_field" in self.model_fields_set:
            _dict['custbody_bb1_vl_action_approve_field'] = None

        # set to None if custbody_ff_sc_clickdata (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_clickdata is None and "custbody_ff_sc_clickdata" in self.model_fields_set:
            _dict['custbody_ff_sc_clickdata'] = None

        # set to None if message (nullable) is None
        # and model_fields_set contains the field
        if self.message is None and "message" in self.model_fields_set:
            _dict['message'] = None

        # set to None if custbody_vl_original_total_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_original_total_budget is None and "custbody_vl_original_total_budget" in self.model_fields_set:
            _dict['custbody_vl_original_total_budget'] = None

        # set to None if amount_remaining_total_box (nullable) is None
        # and model_fields_set contains the field
        if self.amount_remaining_total_box is None and "amount_remaining_total_box" in self.model_fields_set:
            _dict['amountRemainingTotalBox'] = None

        # set to None if bill_addressee (nullable) is None
        # and model_fields_set contains the field
        if self.bill_addressee is None and "bill_addressee" in self.model_fields_set:
            _dict['billAddressee'] = None

        # set to None if custbody_bb1_sc_liquid_damages (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_sc_liquid_damages is None and "custbody_bb1_sc_liquid_damages" in self.model_fields_set:
            _dict['custbody_bb1_sc_liquid_damages'] = None

        # set to None if due_date (nullable) is None
        # and model_fields_set contains the field
        if self.due_date is None and "due_date" in self.model_fields_set:
            _dict['dueDate'] = None

        # set to None if custbody_erpff_p2p_basware_send_note (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_erpff_p2p_basware_send_note is None and "custbody_erpff_p2p_basware_send_note" in self.model_fields_set:
            _dict['custbody_erpff_p2p_basware_send_note'] = None

        # set to None if bill_city (nullable) is None
        # and model_fields_set contains the field
        if self.bill_city is None and "bill_city" in self.model_fields_set:
            _dict['billCity'] = None

        # set to None if unapplied (nullable) is None
        # and model_fields_set contains the field
        if self.unapplied is None and "unapplied" in self.model_fields_set:
            _dict['unapplied'] = None

        # set to None if tran_date (nullable) is None
        # and model_fields_set contains the field
        if self.tran_date is None and "tran_date" in self.model_fields_set:
            _dict['tranDate'] = None

        # set to None if custbody_bb1_print_bom (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_print_bom is None and "custbody_bb1_print_bom" in self.model_fields_set:
            _dict['custbody_bb1_print_bom'] = None

        # set to None if memo (nullable) is None
        # and model_fields_set contains the field
        if self.memo is None and "memo" in self.model_fields_set:
            _dict['memo'] = None

        # set to None if custbody_eff_nsp2p_buyerref (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_eff_nsp2p_buyerref is None and "custbody_eff_nsp2p_buyerref" in self.model_fields_set:
            _dict['custbody_eff_nsp2p_buyerref'] = None

        # set to None if custbody_vl_original_material_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_original_material_budget is None and "custbody_vl_original_material_budget" in self.model_fields_set:
            _dict['custbody_vl_original_material_budget'] = None

        # set to None if custbody_date_of_taxable_supply (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_date_of_taxable_supply is None and "custbody_date_of_taxable_supply" in self.model_fields_set:
            _dict['custbody_date_of_taxable_supply'] = None

        # set to None if id (nullable) is None
        # and model_fields_set contains the field
        if self.id is None and "id" in self.model_fields_set:
            _dict['id'] = None

        # set to None if custbody_vl_export_quote (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_export_quote is None and "custbody_vl_export_quote" in self.model_fields_set:
            _dict['custbody_vl_export_quote'] = None

        # set to None if custbody_vl_variation_total_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_variation_total_budget is None and "custbody_vl_variation_total_budget" in self.model_fields_set:
            _dict['custbody_vl_variation_total_budget'] = None

        # set to None if bill_address (nullable) is None
        # and model_fields_set contains the field
        if self.bill_address is None and "bill_address" in self.model_fields_set:
            _dict['billAddress'] = None

        # set to None if custbody_vl_variation_site_manage_budg (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_variation_site_manage_budg is None and "custbody_vl_variation_site_manage_budg" in self.model_fields_set:
            _dict['custbody_vl_variation_site_manage_budg'] = None

        # set to None if est_gross_profit (nullable) is None
        # and model_fields_set contains the field
        if self.est_gross_profit is None and "est_gross_profit" in self.model_fields_set:
            _dict['estGrossProfit'] = None

        # set to None if custbody_vl_orig_preliminaries_budget (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_orig_preliminaries_budget is None and "custbody_vl_orig_preliminaries_budget" in self.model_fields_set:
            _dict['custbody_vl_orig_preliminaries_budget'] = None

        # set to None if end_date (nullable) is None
        # and model_fields_set contains the field
        if self.end_date is None and "end_date" in self.model_fields_set:
            _dict['endDate'] = None

        # set to None if custbody_eff_nsp2p_paymentref (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_eff_nsp2p_paymentref is None and "custbody_eff_nsp2p_paymentref" in self.model_fields_set:
            _dict['custbody_eff_nsp2p_paymentref'] = None

        # set to None if custbody_bb1_custom_notes (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_custom_notes is None and "custbody_bb1_custom_notes" in self.model_fields_set:
            _dict['custbody_bb1_custom_notes'] = None

        # set to None if custbody_subconnotes (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_subconnotes is None and "custbody_subconnotes" in self.model_fields_set:
            _dict['custbody_subconnotes'] = None

        # set to None if custbody_bb1_building_address (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_building_address is None and "custbody_bb1_building_address" in self.model_fields_set:
            _dict['custbody_bb1_building_address'] = None

        # set to None if est_gross_profit_percent (nullable) is None
        # and model_fields_set contains the field
        if self.est_gross_profit_percent is None and "est_gross_profit_percent" in self.model_fields_set:
            _dict['estGrossProfitPercent'] = None

        # set to None if custbody_zc_3wm_acceptance_reason (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_3wm_acceptance_reason is None and "custbody_zc_3wm_acceptance_reason" in self.model_fields_set:
            _dict['custbody_zc_3wm_acceptance_reason'] = None

        # set to None if custbody_application_date (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_application_date is None and "custbody_application_date" in self.model_fields_set:
            _dict['custbody_application_date'] = None

        # set to None if custbody_ph4014_wtax_rate (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ph4014_wtax_rate is None and "custbody_ph4014_wtax_rate" in self.model_fields_set:
            _dict['custbody_ph4014_wtax_rate'] = None

        # set to None if discount_amount (nullable) is None
        # and model_fields_set contains the field
        if self.discount_amount is None and "discount_amount" in self.model_fields_set:
            _dict['discountAmount'] = None

        # set to None if custbody_nx_idempotency_key (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_nx_idempotency_key is None and "custbody_nx_idempotency_key" in self.model_fields_set:
            _dict['custbody_nx_idempotency_key'] = None

        # set to None if custbody_ff_sc_tax_scheme_id (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_tax_scheme_id is None and "custbody_ff_sc_tax_scheme_id" in self.model_fields_set:
            _dict['custbody_ff_sc_tax_scheme_id'] = None

        # set to None if amount_remaining (nullable) is None
        # and model_fields_set contains the field
        if self.amount_remaining is None and "amount_remaining" in self.model_fields_set:
            _dict['amountRemaining'] = None

        # set to None if custbody_eff_nsp2p_serialnumbers (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_eff_nsp2p_serialnumbers is None and "custbody_eff_nsp2p_serialnumbers" in self.model_fields_set:
            _dict['custbody_eff_nsp2p_serialnumbers'] = None

        # set to None if discount_rate (nullable) is None
        # and model_fields_set contains the field
        if self.discount_rate is None and "discount_rate" in self.model_fields_set:
            _dict['discountRate'] = None

        # set to None if bill_state (nullable) is None
        # and model_fields_set contains the field
        if self.bill_state is None and "bill_state" in self.model_fields_set:
            _dict['billState'] = None

        # set to None if custbody_4601_transactions (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_4601_transactions is None and "custbody_4601_transactions" in self.model_fields_set:
            _dict['custbody_4601_transactions'] = None

        # set to None if custbody_zc_ap_bank_integ_id (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_ap_bank_integ_id is None and "custbody_zc_ap_bank_integ_id" in self.model_fields_set:
            _dict['custbody_zc_ap_bank_integ_id'] = None

        # set to None if custbody_estimated_gp (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_estimated_gp is None and "custbody_estimated_gp" in self.model_fields_set:
            _dict['custbody_estimated_gp'] = None

        # set to None if custbody_zc_ap_bank_acct_balance (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_ap_bank_acct_balance is None and "custbody_zc_ap_bank_acct_balance" in self.model_fields_set:
            _dict['custbody_zc_ap_bank_acct_balance'] = None

        # set to None if custbody_eff_nsp2p_supplier_notes (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_eff_nsp2p_supplier_notes is None and "custbody_eff_nsp2p_supplier_notes" in self.model_fields_set:
            _dict['custbody_eff_nsp2p_supplier_notes'] = None

        # set to None if bill_override (nullable) is None
        # and model_fields_set contains the field
        if self.bill_override is None and "bill_override" in self.model_fields_set:
            _dict['billOverride'] = None

        # set to None if custbody_erpff_p2p_customer_reference (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_erpff_p2p_customer_reference is None and "custbody_erpff_p2p_customer_reference" in self.model_fields_set:
            _dict['custbody_erpff_p2p_customer_reference'] = None

        # set to None if billing_address_text (nullable) is None
        # and model_fields_set contains the field
        if self.billing_address_text is None and "billing_address_text" in self.model_fields_set:
            _dict['billingAddress_text'] = None

        # set to None if discount_total (nullable) is None
        # and model_fields_set contains the field
        if self.discount_total is None and "discount_total" in self.model_fields_set:
            _dict['discountTotal'] = None

        # set to None if custbody_4110_customregnum (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_4110_customregnum is None and "custbody_4110_customregnum" in self.model_fields_set:
            _dict['custbody_4110_customregnum'] = None

        # set to None if custbodyinterlegacytrannumber (nullable) is None
        # and model_fields_set contains the field
        if self.custbodyinterlegacytrannumber is None and "custbodyinterlegacytrannumber" in self.model_fields_set:
            _dict['custbodyinterlegacytrannumber'] = None

        # set to None if custbody_ff_sc_deliverydate (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_deliverydate is None and "custbody_ff_sc_deliverydate" in self.model_fields_set:
            _dict['custbody_ff_sc_deliverydate'] = None

        # set to None if custbody_4601_wtax_withheld (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_4601_wtax_withheld is None and "custbody_4601_wtax_withheld" in self.model_fields_set:
            _dict['custbody_4601_wtax_withheld'] = None

        # set to None if custbody_bb1_vendor_phone (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_vendor_phone is None and "custbody_bb1_vendor_phone" in self.model_fields_set:
            _dict['custbody_bb1_vendor_phone'] = None

        # set to None if custbody_ff_sc_endpoint_scheme (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_endpoint_scheme is None and "custbody_ff_sc_endpoint_scheme" in self.model_fields_set:
            _dict['custbody_ff_sc_endpoint_scheme'] = None

        # set to None if custbody_zc_ap_subsidiary_config_data (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_zc_ap_subsidiary_config_data is None and "custbody_zc_ap_subsidiary_config_data" in self.model_fields_set:
            _dict['custbody_zc_ap_subsidiary_config_data'] = None

        # set to None if custbody_bb1_sc_completiondate (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_sc_completiondate is None and "custbody_bb1_sc_completiondate" in self.model_fields_set:
            _dict['custbody_bb1_sc_completiondate'] = None

        # set to None if other_ref_num (nullable) is None
        # and model_fields_set contains the field
        if self.other_ref_num is None and "other_ref_num" in self.model_fields_set:
            _dict['otherRefNum'] = None

        # set to None if custbody_vl_total_re_invoice_value (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_total_re_invoice_value is None and "custbody_vl_total_re_invoice_value" in self.model_fields_set:
            _dict['custbody_vl_total_re_invoice_value'] = None

        # set to None if total (nullable) is None
        # and model_fields_set contains the field
        if self.total is None and "total" in self.model_fields_set:
            _dict['total'] = None

        # set to None if custbody_ff_sc_bank_details_einvoices (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_bank_details_einvoices is None and "custbody_ff_sc_bank_details_einvoices" in self.model_fields_set:
            _dict['custbody_ff_sc_bank_details_einvoices'] = None

        # set to None if custbody_ff_sc_tax_id (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_tax_id is None and "custbody_ff_sc_tax_id" in self.model_fields_set:
            _dict['custbody_ff_sc_tax_id'] = None

        # set to None if custbody_4601_appliesto (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_4601_appliesto is None and "custbody_4601_appliesto" in self.model_fields_set:
            _dict['custbody_4601_appliesto'] = None

        # set to None if custbody_msl_site_address_hidden (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_msl_site_address_hidden is None and "custbody_msl_site_address_hidden" in self.model_fields_set:
            _dict['custbody_msl_site_address_hidden'] = None

        # set to None if custbody_ff_sc_endpoint_id (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_endpoint_id is None and "custbody_ff_sc_endpoint_id" in self.model_fields_set:
            _dict['custbody_ff_sc_endpoint_id'] = None

        # set to None if custbody_ph4014_wtax_cpay_pacct (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ph4014_wtax_cpay_pacct is None and "custbody_ph4014_wtax_cpay_pacct" in self.model_fields_set:
            _dict['custbody_ph4014_wtax_cpay_pacct'] = None

        # set to None if custbody_date_lsa (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_date_lsa is None and "custbody_date_lsa" in self.model_fields_set:
            _dict['custbody_date_lsa'] = None

        # set to None if tran_id (nullable) is None
        # and model_fields_set contains the field
        if self.tran_id is None and "tran_id" in self.model_fields_set:
            _dict['tranId'] = None

        # set to None if custbody_counterparty_vat (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_counterparty_vat is None and "custbody_counterparty_vat" in self.model_fields_set:
            _dict['custbody_counterparty_vat'] = None

        # set to None if custbody_refno_originvoice (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_refno_originvoice is None and "custbody_refno_originvoice" in self.model_fields_set:
            _dict['custbody_refno_originvoice'] = None

        # set to None if last_modified_date (nullable) is None
        # and model_fields_set contains the field
        if self.last_modified_date is None and "last_modified_date" in self.model_fields_set:
            _dict['lastModifiedDate'] = None

        # set to None if custbody_msl_site_address (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_msl_site_address is None and "custbody_msl_site_address" in self.model_fields_set:
            _dict['custbody_msl_site_address'] = None

        # set to None if custbody_ff_sc_b2pmodel (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_ff_sc_b2pmodel is None and "custbody_ff_sc_b2pmodel" in self.model_fields_set:
            _dict['custbody_ff_sc_b2pmodel'] = None

        # set to None if custbody_bb1_sc_startdate (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_bb1_sc_startdate is None and "custbody_bb1_sc_startdate" in self.model_fields_set:
            _dict['custbody_bb1_sc_startdate'] = None

        # set to None if custbody_vl_req_extra_comments (nullable) is None
        # and model_fields_set contains the field
        if self.custbody_vl_req_extra_comments is None and "custbody_vl_req_extra_comments" in self.model_fields_set:
            _dict['custbody_vl_req_extra_comments'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of CreditMemo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "custbody_bb1_vl_rejection_reason": obj.get("custbody_bb1_vl_rejection_reason"),
            "custbody_terms_dry_riser_maintenance": obj.get("custbody_terms_dry_riser_maintenance"),
            "custbody_bb1_sc_nodates": obj.get("custbody_bb1_sc_nodates"),
            "startDate": obj.get("startDate"),
            "custbody_terms_lighting_maintenance": obj.get("custbody_terms_lighting_maintenance"),
            "custbody_bb1_quote_released": obj.get("custbody_bb1_quote_released"),
            "custbody_terms_active_payment_install": obj.get("custbody_terms_active_payment_install"),
            "custbody_terms_maintenance_assumptions": obj.get("custbody_terms_maintenance_assumptions"),
            "custbody_ph4014_wtax_applied": obj.get("custbody_ph4014_wtax_applied"),
            "custbody_bb1_open_cr_value": obj.get("custbody_bb1_open_cr_value"),
            "custbody_terms_provisional_costs": obj.get("custbody_terms_provisional_costs"),
            "custbody_4601_total_amt": obj.get("custbody_4601_total_amt"),
            "custbody_terms_payment_for_works": obj.get("custbody_terms_payment_for_works"),
            "subtotal": obj.get("subtotal"),
            "billAddr1": obj.get("billAddr1"),
            "totalCostEstimate": obj.get("totalCostEstimate"),
            "amountPaid": obj.get("amountPaid"),
            "billAddr2": obj.get("billAddr2"),
            "billAddr3": obj.get("billAddr3"),
            "salesReturn": obj.get("salesReturn"),
            "custbody_ph4014_wtax_wamt": obj.get("custbody_ph4014_wtax_wamt"),
            "custbody_terms_compartment_install": obj.get("custbody_terms_compartment_install"),
            "custbody_link_lsa": obj.get("custbody_link_lsa"),
            "asOfDate": obj.get("asOfDate"),
            "createdDate": obj.get("createdDate"),
            "custbody_terms_painting_and_decorating": obj.get("custbody_terms_painting_and_decorating"),
            "custbody_nx_customer_signature": obj.get("custbody_nx_customer_signature"),
            "custbody_ph4014_wtax_code": obj.get("custbody_ph4014_wtax_code"),
            "custbodybillreferencenumber": obj.get("custbodybillreferencenumber"),
            "custbody_terms_payment_healthchecks": obj.get("custbody_terms_payment_healthchecks"),
            "custbody_bb1_hubspot_record_id": obj.get("custbody_bb1_hubspot_record_id"),
            "custbody_adjustment_journal": obj.get("custbody_adjustment_journal"),
            "custbody_vl_scheduled_auto_approval": obj.get("custbody_vl_scheduled_auto_approval"),
            "custbody_client_project_manager_email": obj.get("custbody_client_project_manager_email"),
            "custbody_terms_extinguish_maintenance": obj.get("custbody_terms_extinguish_maintenance"),
            "email": obj.get("email"),
            "custbody_link_name_lsa": obj.get("custbody_link_name_lsa"),
            "canHaveStackable": obj.get("canHaveStackable"),
            "custbody_bb1_vl_action_reject_field": obj.get("custbody_bb1_vl_action_reject_field"),
            "custbody_zc_ap_gl_acct_balance": obj.get("custbody_zc_ap_gl_acct_balance"),
            "custbody_country_of_origin": obj.get("custbody_country_of_origin"),
            "custbody_terms_fd_hc_assumptions": obj.get("custbody_terms_fd_hc_assumptions"),
            "custbody_unique_asset_code": obj.get("custbody_unique_asset_code"),
            "custbody_vl_variation_labour_budget": obj.get("custbody_vl_variation_labour_budget"),
            "custbody_zc_3wm_translations": obj.get("custbody_zc_3wm_translations"),
            "custbody_vl_variation_prelim_budget": obj.get("custbody_vl_variation_prelim_budget"),
            "prevDate": obj.get("prevDate"),
            "custbody_itr_nexus": obj.get("custbody_itr_nexus"),
            "salesEffectiveDate": obj.get("salesEffectiveDate"),
            "customForm": CreditMemoCustomForm.from_dict(obj["customForm"]) if obj.get("customForm") is not None else None,
            "custbody_terms_damper_maintenance": obj.get("custbody_terms_damper_maintenance"),
            "custbody_report_timestamp": obj.get("custbody_report_timestamp"),
            "custbody_bb1_cc_note": obj.get("custbody_bb1_cc_note"),
            "custbody_msl_estimated_weeks": obj.get("custbody_msl_estimated_weeks"),
            "custbody_vl_req_contact_name": obj.get("custbody_vl_req_contact_name"),
            "prevRep": obj.get("prevRep"),
            "custbody_terms_sprinkler_maintenance": obj.get("custbody_terms_sprinkler_maintenance"),
            "custbody_ff_sc_endpoint_scheme_id": obj.get("custbody_ff_sc_endpoint_scheme_id"),
            "shipAddress": obj.get("shipAddress"),
            "custbody_ph4014_wtax_bamt": obj.get("custbody_ph4014_wtax_bamt"),
            "custbody_erpff_p2p_auto_send_document": obj.get("custbody_erpff_p2p_auto_send_document"),
            "externalId": obj.get("externalId"),
            "source": CreditMemoSource.from_dict(obj["source"]) if obj.get("source") is not None else None,
            "custbody_wtax_base_url": obj.get("custbody_wtax_base_url"),
            "custbody_ff_sc_endpoint_op_id": obj.get("custbody_ff_sc_endpoint_op_id"),
            "toBePrinted": obj.get("toBePrinted"),
            "custbody_vl_variation_material_budget": obj.get("custbody_vl_variation_material_budget"),
            "billPhone": obj.get("billPhone"),
            "custbodyhs_integration_embed": obj.get("custbodyhs_integration_embed"),
            "billAttention": obj.get("billAttention"),
            "custbody_terms_contingency": obj.get("custbody_terms_contingency"),
            "custbodycus_ven_sales_order_department": obj.get("custbodycus_ven_sales_order_department"),
            "custbody_test_terms_pdf": obj.get("custbody_test_terms_pdf"),
            "toBeEmailed": obj.get("toBeEmailed"),
            "custbody_msl_commission_generated": obj.get("custbody_msl_commission_generated"),
            "custbody_bb1_link_to_sharepoint": obj.get("custbody_bb1_link_to_sharepoint"),
            "custbody_zc_ap_main_config_data": obj.get("custbody_zc_ap_main_config_data"),
            "discountDate": obj.get("discountDate"),
            "custbody_vl_req_date_required": obj.get("custbody_vl_req_date_required"),
            "custbody_ff_sc_trans_ita_apy_code": obj.get("custbody_ff_sc_trans_ita_apy_code"),
            "custbody_bb1_roc_label": obj.get("custbody_bb1_roc_label"),
            "custbody_ph4014_wtax_reversal_flag": obj.get("custbody_ph4014_wtax_reversal_flag"),
            "custbody_vl_temp": obj.get("custbody_vl_temp"),
            "custbodyinvoiceonhold": obj.get("custbodyinvoiceonhold"),
            "custbody_ff_sc_field_block_mapping": obj.get("custbody_ff_sc_field_block_mapping"),
            "custbody_vl_invoice_group_no": obj.get("custbody_vl_invoice_group_no"),
            "applied": obj.get("applied"),
            "custbody_total_quote_gp_percent": obj.get("custbody_total_quote_gp_percent"),
            "exchangeRate": obj.get("exchangeRate"),
            "custbody_itr_doc_number": obj.get("custbody_itr_doc_number"),
            "custbody_vl_req_contact_number": obj.get("custbody_vl_req_contact_number"),
            "custbody_zc_ai_field_application_data": obj.get("custbody_zc_ai_field_application_data"),
            "custbody_bb1_val_credited": obj.get("custbody_bb1_val_credited"),
            "custbody_bb1_custom_address": obj.get("custbody_bb1_custom_address"),
            "originator": obj.get("originator"),
            "custbody_bb1_legacytrannumber": obj.get("custbody_bb1_legacytrannumber"),
            "billZip": obj.get("billZip"),
            "toBeFaxed": obj.get("toBeFaxed"),
            "custbody_bb1_release_check": obj.get("custbody_bb1_release_check"),
            "custbody_bb1_cr_supportingfile": obj.get("custbody_bb1_cr_supportingfile"),
            "custbody_vl_original_site_mgmt_budget": obj.get("custbody_vl_original_site_mgmt_budget"),
            "custbody_4601_entitytype": obj.get("custbody_4601_entitytype"),
            "custbody_ff_sc_e_inv_pdf": obj.get("custbody_ff_sc_e_inv_pdf"),
            "custbody_bb1_save_as_draft": obj.get("custbody_bb1_save_as_draft"),
            "custbody_terms_hc_assumptions": obj.get("custbody_terms_hc_assumptions"),
            "custbody_vl_original_labour_budget": obj.get("custbody_vl_original_labour_budget"),
            "shipDate": obj.get("shipDate"),
            "shippingAddress_text": obj.get("shippingAddress_text"),
            "custbody_vl_bill_pymt_je_cr_data": obj.get("custbody_vl_bill_pymt_je_cr_data"),
            "custbody_terms_accreditations": obj.get("custbody_terms_accreditations"),
            "custbody_bb1_vl_action_approve_field": obj.get("custbody_bb1_vl_action_approve_field"),
            "custbody_ff_sc_clickdata": obj.get("custbody_ff_sc_clickdata"),
            "message": obj.get("message"),
            "custbody_terms_compartment_maintenance": obj.get("custbody_terms_compartment_maintenance"),
            "custbody_vl_original_total_budget": obj.get("custbody_vl_original_total_budget"),
            "custbody_terms_suppresion_maintenance": obj.get("custbody_terms_suppresion_maintenance"),
            "amountRemainingTotalBox": obj.get("amountRemainingTotalBox"),
            "billAddressee": obj.get("billAddressee"),
            "custbody_bb1_sc_liquid_damages": obj.get("custbody_bb1_sc_liquid_damages"),
            "dueDate": obj.get("dueDate"),
            "custbody_erpff_p2p_basware_send_note": obj.get("custbody_erpff_p2p_basware_send_note"),
            "custbody_intercompany_review": obj.get("custbody_intercompany_review"),
            "billCity": obj.get("billCity"),
            "custbody_terms_fire_alarm_install": obj.get("custbody_terms_fire_alarm_install"),
            "unapplied": obj.get("unapplied"),
            "custbody_terms_compartmentation_hc": obj.get("custbody_terms_compartmentation_hc"),
            "tranDate": obj.get("tranDate"),
            "custbody_bb1_print_bom": obj.get("custbody_bb1_print_bom"),
            "memo": obj.get("memo"),
            "billCountry": InvoiceBillingAddressCountry.from_dict(obj["billCountry"]) if obj.get("billCountry") is not None else None,
            "custbody_eff_nsp2p_buyerref": obj.get("custbody_eff_nsp2p_buyerref"),
            "custbody_vl_original_material_budget": obj.get("custbody_vl_original_material_budget"),
            "custbody_date_of_taxable_supply": obj.get("custbody_date_of_taxable_supply"),
            "id": obj.get("id"),
            "custbody_vl_export_quote": obj.get("custbody_vl_export_quote"),
            "custbody_vl_variation_total_budget": obj.get("custbody_vl_variation_total_budget"),
            "billAddress": obj.get("billAddress"),
            "custbody_vl_variation_site_manage_budg": obj.get("custbody_vl_variation_site_manage_budg"),
            "estGrossProfit": obj.get("estGrossProfit"),
            "custbody_vl_orig_preliminaries_budget": obj.get("custbody_vl_orig_preliminaries_budget"),
            "endDate": obj.get("endDate"),
            "custbody_eff_nsp2p_paymentref": obj.get("custbody_eff_nsp2p_paymentref"),
            "custbody_cash_register": obj.get("custbody_cash_register"),
            "custbody_bb1_custom_notes": obj.get("custbody_bb1_custom_notes"),
            "custbody_terms_fd_healthcheck": obj.get("custbody_terms_fd_healthcheck"),
            "custbody_subconnotes": obj.get("custbody_subconnotes"),
            "status": CreditMemoStatus.from_dict(obj["status"]) if obj.get("status") is not None else None,
            "custbody_update": obj.get("custbody_update"),
            "custbody_bb1_building_address": obj.get("custbody_bb1_building_address"),
            "shipIsResidential": obj.get("shipIsResidential"),
            "estGrossProfitPercent": obj.get("estGrossProfitPercent"),
            "custbody_zc_3wm_acceptance_reason": obj.get("custbody_zc_3wm_acceptance_reason"),
            "custbody_msl_qs_invoice": obj.get("custbody_msl_qs_invoice"),
            "tranIsVsoeBundle": obj.get("tranIsVsoeBundle"),
            "custbody_application_date": obj.get("custbody_application_date"),
            "custbody_terms_compartment_support": obj.get("custbody_terms_compartment_support"),
            "custbody_ph4014_wtax_rate": obj.get("custbody_ph4014_wtax_rate"),
            "shipOverride": obj.get("shipOverride"),
            "discountAmount": obj.get("discountAmount"),
            "custbody_nx_idempotency_key": obj.get("custbody_nx_idempotency_key"),
            "custbody_ff_sc_tax_scheme_id": obj.get("custbody_ff_sc_tax_scheme_id"),
            "whichChargesToAdd": CreditMemoWhichChargesToAdd.from_dict(obj["whichChargesToAdd"]) if obj.get("whichChargesToAdd") is not None else None,
            "amountRemaining": obj.get("amountRemaining"),
            "custbody_eff_nsp2p_serialnumbers": obj.get("custbody_eff_nsp2p_serialnumbers"),
            "custbody_terms_works_assumptions": obj.get("custbody_terms_works_assumptions"),
            "discountRate": obj.get("discountRate"),
            "billState": obj.get("billState"),
            "custbody_4601_transactions": obj.get("custbody_4601_transactions"),
            "custbody_terms_hc_accreditations": obj.get("custbody_terms_hc_accreditations"),
            "custbody_terms_smoke_vent_maintenance": obj.get("custbody_terms_smoke_vent_maintenance"),
            "custbody_terms_fd_installation": obj.get("custbody_terms_fd_installation"),
            "custbody_erpff_p2p_document_sent": obj.get("custbody_erpff_p2p_document_sent"),
            "custbody_zc_ap_bank_integ_id": obj.get("custbody_zc_ap_bank_integ_id"),
            "custbody_is_a_variation": obj.get("custbody_is_a_variation"),
            "custbody_auto_send_document_nonstore": obj.get("custbody_auto_send_document_nonstore"),
            "custbody_estimated_gp": obj.get("custbody_estimated_gp"),
            "custbody_zc_ap_bank_acct_balance": obj.get("custbody_zc_ap_bank_acct_balance"),
            "custbody_eff_nsp2p_supplier_notes": obj.get("custbody_eff_nsp2p_supplier_notes"),
            "billOverride": obj.get("billOverride"),
            "custbody_erpff_p2p_customer_reference": obj.get("custbody_erpff_p2p_customer_reference"),
            "billingAddress_text": obj.get("billingAddress_text"),
            "discountTotal": obj.get("discountTotal"),
            "custbody_4110_customregnum": obj.get("custbody_4110_customregnum"),
            "custbodyinterlegacytrannumber": obj.get("custbodyinterlegacytrannumber"),
            "custbody_vl_group_invoice": obj.get("custbody_vl_group_invoice"),
            "custbody_ff_sc_deliverydate": obj.get("custbody_ff_sc_deliverydate"),
            "custbody_4601_wtax_withheld": obj.get("custbody_4601_wtax_withheld"),
            "custbody_bb1_vendor_phone": obj.get("custbody_bb1_vendor_phone"),
            "custbody_ff_sc_endpoint_scheme": obj.get("custbody_ff_sc_endpoint_scheme"),
            "custbody_zc_ap_subsidiary_config_data": obj.get("custbody_zc_ap_subsidiary_config_data"),
            "custbody_bb1_sc_completiondate": obj.get("custbody_bb1_sc_completiondate"),
            "otherRefNum": obj.get("otherRefNum"),
            "custbody_vl_total_re_invoice_value": obj.get("custbody_vl_total_re_invoice_value"),
            "total": obj.get("total"),
            "custbody_ff_sc_bank_details_einvoices": obj.get("custbody_ff_sc_bank_details_einvoices"),
            "custbody_terms_fire_alarm_maintenance": obj.get("custbody_terms_fire_alarm_maintenance"),
            "custbody_ff_sc_tax_id": obj.get("custbody_ff_sc_tax_id"),
            "custbody_4601_appliesto": obj.get("custbody_4601_appliesto"),
            "custbody_msl_site_address_hidden": obj.get("custbody_msl_site_address_hidden"),
            "custbody_nondeductible_processed": obj.get("custbody_nondeductible_processed"),
            "custbody_ff_sc_endpoint_id": obj.get("custbody_ff_sc_endpoint_id"),
            "custbody_ph4014_wtax_cpay_pacct": obj.get("custbody_ph4014_wtax_cpay_pacct"),
            "custbody_date_lsa": obj.get("custbody_date_lsa"),
            "tranId": obj.get("tranId"),
            "custbody_counterparty_vat": obj.get("custbody_counterparty_vat"),
            "custbody_refno_originvoice": obj.get("custbody_refno_originvoice"),
            "lastModifiedDate": obj.get("lastModifiedDate"),
            "intercoStatus": VendorBillIntercoStatus.from_dict(obj["intercoStatus"]) if obj.get("intercoStatus") is not None else None,
            "custbody_msl_site_address": obj.get("custbody_msl_site_address"),
            "custbody_ff_sc_b2pmodel": obj.get("custbody_ff_sc_b2pmodel"),
            "custbody_bb1_sc_startdate": obj.get("custbody_bb1_sc_startdate"),
            "custbody_vl_req_extra_comments": obj.get("custbody_vl_req_extra_comments"),
            "custbody_bb1_credit_created": obj.get("custbody_bb1_credit_created"),
            "refName": obj.get("refName"),
            "links": [NsLink.from_dict(_item) for _item in obj["links"]] if obj.get("links") is not None else None,
            "custbody_ff_sc_po_validat_rule_applied": NsResource.from_dict(obj["custbody_ff_sc_po_validat_rule_applied"]) if obj.get("custbody_ff_sc_po_validat_rule_applied") is not None else None,
            "custbody_bb1_vl_current_approval": NsResource.from_dict(obj["custbody_bb1_vl_current_approval"]) if obj.get("custbody_bb1_vl_current_approval") is not None else None,
            "custbody_nx_customer": Customer.from_dict(obj["custbody_nx_customer"]) if obj.get("custbody_nx_customer") is not None else None,
            "custbody_zc_ap_pay_from": NsResource.from_dict(obj["custbody_zc_ap_pay_from"]) if obj.get("custbody_zc_ap_pay_from") is not None else None,
            "custbody_zc_ap_bank_acct_gl_acct": Account.from_dict(obj["custbody_zc_ap_bank_acct_gl_acct"]) if obj.get("custbody_zc_ap_bank_acct_gl_acct") is not None else None,
            "custbody_nx_case_type": NsResource.from_dict(obj["custbody_nx_case_type"]) if obj.get("custbody_nx_case_type") is not None else None,
            "custbody_4601_doc_ref_id": NsResource.from_dict(obj["custbody_4601_doc_ref_id"]) if obj.get("custbody_4601_doc_ref_id") is not None else None,
            "custbody_nx_case": NsResource.from_dict(obj["custbody_nx_case"]) if obj.get("custbody_nx_case") is not None else None,
            "custbody_vl_req_urgency_tier": NsResource.from_dict(obj["custbody_vl_req_urgency_tier"]) if obj.get("custbody_vl_req_urgency_tier") is not None else None,
            "custbody_project_framework": NsResource.from_dict(obj["custbody_project_framework"]) if obj.get("custbody_project_framework") is not None else None,
            "entity": VendorBillItemElementCustomer.from_dict(obj["entity"]) if obj.get("entity") is not None else None,
            "custbody_ph4185_bstyle": NsResource.from_dict(obj["custbody_ph4185_bstyle"]) if obj.get("custbody_ph4185_bstyle") is not None else None,
            "custbody_delivery_terms": NsResource.from_dict(obj["custbody_delivery_terms"]) if obj.get("custbody_delivery_terms") is not None else None,
            "custbody_suppliessupplier": Vendor.from_dict(obj["custbody_suppliessupplier"]) if obj.get("custbody_suppliessupplier") is not None else None,
            "custbody_zc_ap_pay_to": NsResource.from_dict(obj["custbody_zc_ap_pay_to"]) if obj.get("custbody_zc_ap_pay_to") is not None else None,
            "cseg_paactivitycode": NsResource.from_dict(obj["cseg_paactivitycode"]) if obj.get("cseg_paactivitycode") is not None else None,
            "custbody_nondeductible_ref_tran": NsResourceCollection.from_dict(obj["custbody_nondeductible_ref_tran"]) if obj.get("custbody_nondeductible_ref_tran") is not None else None,
            "custbody_bb1_suiteprojects_project": NsResource.from_dict(obj["custbody_bb1_suiteprojects_project"]) if obj.get("custbody_bb1_suiteprojects_project") is not None else None,
            "discountItem": NsResource.from_dict(obj["discountItem"]) if obj.get("discountItem") is not None else None,
            "subsidiary": NsResource.from_dict(obj["subsidiary"]) if obj.get("subsidiary") is not None else None,
            "custbodyprojectqsheader": NsResource.from_dict(obj["custbodyprojectqsheader"]) if obj.get("custbodyprojectqsheader") is not None else None,
            "custbody_vl_payment_certificate": NsResource.from_dict(obj["custbody_vl_payment_certificate"]) if obj.get("custbody_vl_payment_certificate") is not None else None,
            "intercoTransaction": NsResource.from_dict(obj["intercoTransaction"]) if obj.get("intercoTransaction") is not None else None,
            "custbody_projectbuyer": NsResource.from_dict(obj["custbody_projectbuyer"]) if obj.get("custbody_projectbuyer") is not None else None,
            "custbody_vl_linked_transaction": NsResource.from_dict(obj["custbody_vl_linked_transaction"]) if obj.get("custbody_vl_linked_transaction") is not None else None,
            "custbody_nx_task": NsResource.from_dict(obj["custbody_nx_task"]) if obj.get("custbody_nx_task") is not None else None,
            "custbody_nx_asset": NsResource.from_dict(obj["custbody_nx_asset"]) if obj.get("custbody_nx_asset") is not None else None,
            "cseg_accreditations": NsResource.from_dict(obj["cseg_accreditations"]) if obj.get("cseg_accreditations") is not None else None,
            "custbody_regime_code_of_supply": NsResource.from_dict(obj["custbody_regime_code_of_supply"]) if obj.get("custbody_regime_code_of_supply") is not None else None,
            "custbody_nx_projecttask": NsResource.from_dict(obj["custbody_nx_projecttask"]) if obj.get("custbody_nx_projecttask") is not None else None,
            "custbody_ff_sc_bank_details_sec": NsResource.from_dict(obj["custbody_ff_sc_bank_details_sec"]) if obj.get("custbody_ff_sc_bank_details_sec") is not None else None,
            "partner": NsResource.from_dict(obj["partner"]) if obj.get("partner") is not None else None,
            "billAddressList": NsResource.from_dict(obj["billAddressList"]) if obj.get("billAddressList") is not None else None,
            "bulkProcSubmission": NsResource.from_dict(obj["bulkProcSubmission"]) if obj.get("bulkProcSubmission") is not None else None,
            "custbody_bb1_created_by": NsResource.from_dict(obj["custbody_bb1_created_by"]) if obj.get("custbody_bb1_created_by") is not None else None,
            "item": CreditMemoItemCollection.from_dict(obj["item"]) if obj.get("item") is not None else None,
            "custbody_bb1_vl_project_owner": NsResource.from_dict(obj["custbody_bb1_vl_project_owner"]) if obj.get("custbody_bb1_vl_project_owner") is not None else None,
            "salesRep": VendorBillItemElementCustomer.from_dict(obj["salesRep"]) if obj.get("salesRep") is not None else None,
            "custbody_vl_req_request_type": NsResource.from_dict(obj["custbody_vl_req_request_type"]) if obj.get("custbody_vl_req_request_type") is not None else None,
            "shippingAddress": CreditMemoShippingAddress.from_dict(obj["shippingAddress"]) if obj.get("shippingAddress") is not None else None,
            "custbody_nexus_notc": NsResource.from_dict(obj["custbody_nexus_notc"]) if obj.get("custbody_nexus_notc") is not None else None,
            "custbody_bb1_dispute_reason": NsResource.from_dict(obj["custbody_bb1_dispute_reason"]) if obj.get("custbody_bb1_dispute_reason") is not None else None,
            "custbody_tc_relatedtask": NsResource.from_dict(obj["custbody_tc_relatedtask"]) if obj.get("custbody_tc_relatedtask") is not None else None,
            "custbody_regime_code": NsResource.from_dict(obj["custbody_regime_code"]) if obj.get("custbody_regime_code") is not None else None,
            "custbody_ordertype": NsResource.from_dict(obj["custbody_ordertype"]) if obj.get("custbody_ordertype") is not None else None,
            "createdFrom": NsResource.from_dict(obj["createdFrom"]) if obj.get("createdFrom") is not None else None,
            "custbody_requestor_header": NsResource.from_dict(obj["custbody_requestor_header"]) if obj.get("custbody_requestor_header") is not None else None,
            "messageSel": NsResource.from_dict(obj["messageSel"]) if obj.get("messageSel") is not None else None,
            "custbodypmscheduler": NsResource.from_dict(obj["custbodypmscheduler"]) if obj.get("custbodypmscheduler") is not None else None,
            "job": VendorBillItemElementCustomer.from_dict(obj["job"]) if obj.get("job") is not None else None,
            "custbody_ff_sc_bank_details": NsResource.from_dict(obj["custbody_ff_sc_bank_details"]) if obj.get("custbody_ff_sc_bank_details") is not None else None,
            "currency": Currency.from_dict(obj["currency"]) if obj.get("currency") is not None else None,
            "custbody_nondeductible_ref_genjrnl": NsResource.from_dict(obj["custbody_nondeductible_ref_genjrnl"]) if obj.get("custbody_nondeductible_ref_genjrnl") is not None else None,
            "postingPeriod": NsResource.from_dict(obj["postingPeriod"]) if obj.get("postingPeriod") is not None else None,
            "custbody_ff_sc_trans_ita_pay_term": NsResource.from_dict(obj["custbody_ff_sc_trans_ita_pay_term"]) if obj.get("custbody_ff_sc_trans_ita_pay_term") is not None else None,
            "custbody_bb1_building": NsResource.from_dict(obj["custbody_bb1_building"]) if obj.get("custbody_bb1_building") is not None else None,
            "custbody_billingcontact": NsResource.from_dict(obj["custbody_billingcontact"]) if obj.get("custbody_billingcontact") is not None else None,
            "custbody_subcontractor": Vendor.from_dict(obj["custbody_subcontractor"]) if obj.get("custbody_subcontractor") is not None else None,
            "custbody_bb1_credit_reason": NsResource.from_dict(obj["custbody_bb1_credit_reason"]) if obj.get("custbody_bb1_credit_reason") is not None else None,
            "custbody_4601_pymnt_ref_id": NsResource.from_dict(obj["custbody_4601_pymnt_ref_id"]) if obj.get("custbody_4601_pymnt_ref_id") is not None else None,
            "custbody_alternate_site": NsResource.from_dict(obj["custbody_alternate_site"]) if obj.get("custbody_alternate_site") is not None else None,
            "custbody_msl_salesrep": NsResource.from_dict(obj["custbody_msl_salesrep"]) if obj.get("custbody_msl_salesrep") is not None else None,
            "accountingBookDetail": CreditMemoAccountingBookDetailCollection.from_dict(obj["accountingBookDetail"]) if obj.get("accountingBookDetail") is not None else None,
            "custbody_transaction_region": NsResource.from_dict(obj["custbody_transaction_region"]) if obj.get("custbody_transaction_region") is not None else None,
            "class": NsResource.from_dict(obj["class"]) if obj.get("class") is not None else None,
            "custbody_vl_new_invoice_number": NsResourceCollection.from_dict(obj["custbody_vl_new_invoice_number"]) if obj.get("custbody_vl_new_invoice_number") is not None else None,
            "terms": Term.from_dict(obj["terms"]) if obj.get("terms") is not None else None,
            "custbody_cs_linked_project": NsResource.from_dict(obj["custbody_cs_linked_project"]) if obj.get("custbody_cs_linked_project") is not None else None,
            "custbody_cs_ventro_estimator": NsResource.from_dict(obj["custbody_cs_ventro_estimator"]) if obj.get("custbody_cs_ventro_estimator") is not None else None,
            "custbody_eff_nsp2p_xml2nstrans": NsResource.from_dict(obj["custbody_eff_nsp2p_xml2nstrans"]) if obj.get("custbody_eff_nsp2p_xml2nstrans") is not None else None,
            "location": NsResource.from_dict(obj["location"]) if obj.get("location") is not None else None,
            "shipMethod": NsResource.from_dict(obj["shipMethod"]) if obj.get("shipMethod") is not None else None,
            "custbody_vl_building_list": NsResourceCollection.from_dict(obj["custbody_vl_building_list"]) if obj.get("custbody_vl_building_list") is not None else None,
            "custbody_notc": NsResource.from_dict(obj["custbody_notc"]) if obj.get("custbody_notc") is not None else None,
            "custbody_bb1_current_cr_approver": NsResource.from_dict(obj["custbody_bb1_current_cr_approver"]) if obj.get("custbody_bb1_current_cr_approver") is not None else None,
            "account": Account.from_dict(obj["account"]) if obj.get("account") is not None else None,
            "apply": CreditMemoApplyCollection.from_dict(obj["apply"]) if obj.get("apply") is not None else None,
            "custbody_bb1_vl_project": NsResource.from_dict(obj["custbody_bb1_vl_project"]) if obj.get("custbody_bb1_vl_project") is not None else None,
            "custbody_mode_of_transport": NsResource.from_dict(obj["custbody_mode_of_transport"]) if obj.get("custbody_mode_of_transport") is not None else None,
            "billingAddress": CreditMemoBillingAddress.from_dict(obj["billingAddress"]) if obj.get("billingAddress") is not None else None,
            "custbody_4601_entitydefaultwitaxcode": NsResource.from_dict(obj["custbody_4601_entitydefaultwitaxcode"]) if obj.get("custbody_4601_entitydefaultwitaxcode") is not None else None,
            "custbody_payment_type": NsResource.from_dict(obj["custbody_payment_type"]) if obj.get("custbody_payment_type") is not None else None,
            "custbody_bb1_market": NsResource.from_dict(obj["custbody_bb1_market"]) if obj.get("custbody_bb1_market") is not None else None,
            "custbody_vl_req_your_name": NsResource.from_dict(obj["custbody_vl_req_your_name"]) if obj.get("custbody_vl_req_your_name") is not None else None,
            "custbody_vl_next_approver": NsResource.from_dict(obj["custbody_vl_next_approver"]) if obj.get("custbody_vl_next_approver") is not None else None,
            "department": NsResource.from_dict(obj["department"]) if obj.get("department") is not None else None,
            "custbody_bb1_credit_requestor": NsResource.from_dict(obj["custbody_bb1_credit_requestor"]) if obj.get("custbody_bb1_credit_requestor") is not None else None,
            "shipAddressList": NsResource.from_dict(obj["shipAddressList"]) if obj.get("shipAddressList") is not None else None
        })
        return _obj


