# coding: utf-8

"""
    NetSuite REST Record API

    NetSuite REST Record API generated 2025-09-02 at 01:07:42 UTC.

    The version of the OpenAPI document: v1
    Contact: info@netsuite.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class CustomerBillingTransactionForm(BaseModel):
    """
    CustomerBillingTransactionForm
    """ # noqa: E501
    id: Optional[StrictStr] = None
    ref_name: Optional[StrictStr] = Field(default=None, alias="refName")
    __properties: ClassVar[List[str]] = ["id", "refName"]

    @field_validator('id')
    def id_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '10', '11', '12', '13', '14', '18', '120', '1', '129', '20', '21', '-9907', '22', '23', '-9908', '24', '-9909', '-9903', '-9904', '28', '-9905', '-9906', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139', '-9901', '-9902', '30', '-9918', '-9919', '35', '36', '-9914', '-9915', '39', '-9916', '-9917', '143', '-9910', '-9911', '-9912', '-9913', '40', '41', '44', '45', '46', '47', '48', '49', '151', '152', '153', '155', '156', '157', '158', '50', '52', '55', '56', '57', '58', '59', '160', '161', '162', '163', '164', '165', '-9892', '166', '-9893', '167', '-9894', '169', '-9899', '60', '61', '62', '-9895', '63', '-9896', '64', '-9898', '66', '67', '68', '69', '170', '171', '172', '173', '174', '175', '177', '178', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '181', '182', '183', '184', '185', '187', '189', '80', '81', '82', '-10104', '83', '84', '85', '86', '87', '88', '89', '190', '192', '-9960', '90', '91', '-9965', '92', '-9966', '93', '-9967', '94', '-9968', '95', '-9961', '96', '-9962', '97', '98', '-9964', '99', '-9970', '-9971', '-9976', '-9977', '-9978', '-9979', '-9972', '-9974', '-9975', '-9980', '-9981', '-9982', '-9987', '-9988', '-9989', '-9983', '-9984', '-9985', '-9986', '-9990', '-9991', '-9992', '-9993', '-9998', '-9999', '-9994', '-9995', '-9996', '-9997', '-9929', '-9925', '-9926', '-9927', '-9928', '-9921', '-9922', '-9923', '-9924', '-9920', '-9936', '-9938', '-9939', '-9932', '-9933', '-9934', '-9935', '-9930', '-9931', '-9947', '-9948', '-9943', '-9944', '-9945', '-9946', '-9940', '-9941', '-9942', '-9958', '-9959', '100', '101', '102', '103', '104', '105', '106', '-9954', '107', '-9955', '108', '-9956', '109', '-9957', '-9950', '-9951', '-9952', '-9953']):
            raise ValueError("must be one of enum values ('110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '10', '11', '12', '13', '14', '18', '120', '1', '129', '20', '21', '-9907', '22', '23', '-9908', '24', '-9909', '-9903', '-9904', '28', '-9905', '-9906', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139', '-9901', '-9902', '30', '-9918', '-9919', '35', '36', '-9914', '-9915', '39', '-9916', '-9917', '143', '-9910', '-9911', '-9912', '-9913', '40', '41', '44', '45', '46', '47', '48', '49', '151', '152', '153', '155', '156', '157', '158', '50', '52', '55', '56', '57', '58', '59', '160', '161', '162', '163', '164', '165', '-9892', '166', '-9893', '167', '-9894', '169', '-9899', '60', '61', '62', '-9895', '63', '-9896', '64', '-9898', '66', '67', '68', '69', '170', '171', '172', '173', '174', '175', '177', '178', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '181', '182', '183', '184', '185', '187', '189', '80', '81', '82', '-10104', '83', '84', '85', '86', '87', '88', '89', '190', '192', '-9960', '90', '91', '-9965', '92', '-9966', '93', '-9967', '94', '-9968', '95', '-9961', '96', '-9962', '97', '98', '-9964', '99', '-9970', '-9971', '-9976', '-9977', '-9978', '-9979', '-9972', '-9974', '-9975', '-9980', '-9981', '-9982', '-9987', '-9988', '-9989', '-9983', '-9984', '-9985', '-9986', '-9990', '-9991', '-9992', '-9993', '-9998', '-9999', '-9994', '-9995', '-9996', '-9997', '-9929', '-9925', '-9926', '-9927', '-9928', '-9921', '-9922', '-9923', '-9924', '-9920', '-9936', '-9938', '-9939', '-9932', '-9933', '-9934', '-9935', '-9930', '-9931', '-9947', '-9948', '-9943', '-9944', '-9945', '-9946', '-9940', '-9941', '-9942', '-9958', '-9959', '100', '101', '102', '103', '104', '105', '106', '-9954', '107', '-9955', '108', '-9956', '109', '-9957', '-9950', '-9951', '-9952', '-9953')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of CustomerBillingTransactionForm from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of CustomerBillingTransactionForm from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "id": obj.get("id"),
            "refName": obj.get("refName")
        })
        return _obj


